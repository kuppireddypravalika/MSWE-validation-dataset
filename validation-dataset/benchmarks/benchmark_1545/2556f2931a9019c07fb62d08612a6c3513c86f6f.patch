From 2556f2931a9019c07fb62d08612a6c3513c86f6f Mon Sep 17 00:00:00 2001
From: Guido Tack <guido.tack@monash.edu>
Date: Fri, 3 Oct 2014 17:07:53 +1000
Subject: [PATCH] Don't keep GC lock while flattening unary operator

---
 lib/flatten.cpp | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/lib/flatten.cpp b/lib/flatten.cpp
index 5b948bb17..f894cba81 100644
--- a/lib/flatten.cpp
+++ b/lib/flatten.cpp
@@ -3396,7 +3396,6 @@ namespace MiniZinc {
       break;
     case Expression::E_UNOP:
       {
-        GCLock lock;
         UnOp* uo = e->cast<UnOp>();
         switch (uo->op()) {
         case UOT_NOT:
@@ -3412,6 +3411,7 @@ namespace MiniZinc {
           break;
         case UOT_MINUS:
           {
+            GC::lock();
             Expression* zero;
             if (uo->e()->type().bt()==Type::BT_INT)
               zero = new IntLit(Location(),0);
@@ -3419,7 +3419,9 @@ namespace MiniZinc {
               zero = new FloatLit(Location(),0.0);
             BinOp* bo = new BinOp(Location(),zero,BOT_MINUS,uo->e());
             bo->type(uo->type());
-            ret = flat_exp(env,ctx,bo,r,b);
+            KeepAlive ka(bo);
+            GC::unlock();
+            ret = flat_exp(env,ctx,ka(),r,b);
           }
           break;
         default: break;
