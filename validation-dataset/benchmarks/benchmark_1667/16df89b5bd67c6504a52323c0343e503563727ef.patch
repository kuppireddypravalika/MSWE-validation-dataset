From 16df89b5bd67c6504a52323c0343e503563727ef Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Diego=20Ram=C3=ADrez?= <diego_rd93@hotmail.com>
Date: Sat, 25 Apr 2015 21:16:10 -0300
Subject: [PATCH] Removed std::move from counting sort

---
 include/djp/sorting/counting_sort.hpp | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/include/djp/sorting/counting_sort.hpp b/include/djp/sorting/counting_sort.hpp
index f46bb7e..a9eba50 100644
--- a/include/djp/sorting/counting_sort.hpp
+++ b/include/djp/sorting/counting_sort.hpp
@@ -8,7 +8,6 @@
 
 #include <vector>
 #include <iterator>
-#include <cassert>
 
 namespace djp {
 
@@ -21,11 +20,11 @@ template <class RandomIt, class Key>
 void counting_sort(RandomIt first, RandomIt last, size_t num_keys, Key key) {
   using T = typename std::iterator_traits<RandomIt>::value_type;
   std::vector<size_t> cnt(num_keys);
-  std::vector<T> elems(first, last);  // Make move iterator if necessary.
+  std::vector<T> elems(first, last);
   for (const T& x : elems) ++cnt[key(x)];
   for (size_t k = 0, acc_freq = 0, freq; k != num_keys; ++k)
     freq = cnt[k], cnt[k] = acc_freq, acc_freq += freq;
-  for (const T& x : elems) first[cnt[key(x)]++] = std::move(x);
+  for (const T& x : elems) first[cnt[key(x)]++] = x;
 }
 
 }  // namespace djp
