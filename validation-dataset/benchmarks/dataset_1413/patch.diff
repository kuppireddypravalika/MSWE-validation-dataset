From 4968998416321e01ed4bdb3bc40140d0b10e97d9 Mon Sep 17 00:00:00 2001
From: Richard Bailey <rsjtaylor.github@gmail.com>
Date: Thu, 4 Jan 2024 13:39:58 +0000
Subject: [PATCH] Benchmark performance of adding many elements to a document

---
 tests/benchmarks.cpp | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/tests/benchmarks.cpp b/tests/benchmarks.cpp
index 891b4d42..095bbfd1 100644
--- a/tests/benchmarks.cpp
+++ b/tests/benchmarks.cpp
@@ -1,6 +1,7 @@
 #include <catch2/catch.hpp>
 #include "adm/common_definitions.hpp"
 #include "adm/utilities/copy.hpp"
+#include "adm/utilities/object_creation.hpp"
 #include "adm/parse.hpp"
 #include "adm/write.hpp"
 #include <sstream>
@@ -14,6 +15,23 @@ TEST_CASE("common_definitions") {
   BENCHMARK("copy") { return adm::deepCopy(common_defs); };
 }
 
+TEST_CASE("adding lots of objects to document") {
+  auto const n = 200;
+  auto add_to_document = [n]() {
+    std::vector<SimpleObjectHolder> holders;
+    holders.reserve(n);
+    for (auto i = 0; i != n; ++i) {
+      holders.push_back(createSimpleObject(std::to_string(i)));
+    }
+    auto doc = Document::create();
+    for (auto const& holder : holders) {
+      doc->add(holder.audioObject);
+    }
+  };
+
+  BENCHMARK("add to document") { return add_to_document(); };
+}
+
 TEST_CASE("lots of blocks") {
   auto generate = []() {
     auto doc = Document::create();
