From 6d5e8681027d59a13fba95b8ee223e324125704e Mon Sep 17 00:00:00 2001
From: ds-sloth <72112344+ds-sloth@users.noreply.github.com>
Date: Sun, 13 Oct 2024 17:21:07 -0400
Subject: [PATCH] lzss.cpp: use memcmp to optimize match-checking (#37)

---
 source/lzss.cpp | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/source/lzss.cpp b/source/lzss.cpp
index 8b6e60f..c4d1fa3 100644
--- a/source/lzss.cpp
+++ b/source/lzss.cpp
@@ -83,13 +83,18 @@ const uint8_t *find_best_match (const uint8_t *start,
 	const uint8_t *best_start = buffer;
 	size_t best_len           = 0;
 
+	const uint8_t *p = buffer;
+
 	// find nearest matching start byte
-	const uint8_t *p = rfind (start, buffer, *buffer);
-	while (p)
+	while ((p = rfind (start, p, *buffer)))
 	{
+		// confirm that this match is as good as the best match so far
+		if (std::memcmp (p, buffer, best_len) != 0)
+			continue;
+
 		// find length of match
-		size_t test_len = 1;
-		for (size_t i = 1; i < len; ++i)
+		size_t test_len = best_len;
+		for (size_t i = best_len; i < len; ++i)
 		{
 			if (p[i] == buffer[i])
 				++test_len;
@@ -107,9 +112,6 @@ const uint8_t *find_best_match (const uint8_t *start,
 		// if we maximized the match, stop here
 		if (best_len == len)
 			break;
-
-		// find next nearest matching byte and try again
-		p = rfind (start, p, *buffer);
 	}
 
 	if (best_len)
