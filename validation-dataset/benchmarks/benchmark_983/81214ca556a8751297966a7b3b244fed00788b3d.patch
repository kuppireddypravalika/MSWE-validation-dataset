From 81214ca556a8751297966a7b3b244fed00788b3d Mon Sep 17 00:00:00 2001
From: Stefanos Kornilios Mitsis Poiitidis <stef@skmp.dev>
Date: Fri, 4 Sep 2020 12:30:59 +0300
Subject: [PATCH] RCLSE: Also optimize when Access is ACCESS_PARTIAL_READ

---
 .../Source/Interface/IR/Passes/DeadContextStoreElimination.cpp  | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/External/FEXCore/Source/Interface/IR/Passes/DeadContextStoreElimination.cpp b/External/FEXCore/Source/Interface/IR/Passes/DeadContextStoreElimination.cpp
index d043019a47..81d2c86d46 100644
--- a/External/FEXCore/Source/Interface/IR/Passes/DeadContextStoreElimination.cpp
+++ b/External/FEXCore/Source/Interface/IR/Passes/DeadContextStoreElimination.cpp
@@ -484,7 +484,7 @@ bool RCLSE::RedundantStoreLoadElimination(FEXCore::IR::IREmitter *IREmit) {
                  LastClass == Op->Class &&
                  LastOffset == Op->Offset &&
                  LastSize == IROp->Size &&
-                 Info->Accessed == ACCESS_READ) {
+                 (Info->Accessed == ACCESS_READ || Info->Accessed == ACCESS_PARTIAL_READ)) {
           // Did we read and then read again?
           IREmit->ReplaceAllUsesWith(CodeNode, LastNode);
           RecordAccess(Info, Op->Class, Op->Offset, IROp->Size, ACCESS_READ, LastNode);
