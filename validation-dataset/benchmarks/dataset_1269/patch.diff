From 2e453ef58a9d320d14b3e19aa40e46afca48623e Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Thu, 17 Nov 2022 05:18:28 +0100
Subject: [PATCH] storage/State: use std::hash() instead of boost::crc

Also eliminate the useless std::set.
---
 src/storage/StorageState.cxx | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)

diff --git a/src/storage/StorageState.cxx b/src/storage/StorageState.cxx
index ea408da76a..8e63316b5f 100644
--- a/src/storage/StorageState.cxx
+++ b/src/storage/StorageState.cxx
@@ -40,9 +40,7 @@
 #pragma GCC diagnostic ignored "-Wcomma"
 #endif
 
-#include <boost/crc.hpp>
-
-#include <set>
+#include <functional> // for std::hash()
 
 #define MOUNT_STATE_BEGIN        "mount_begin"
 #define MOUNT_STATE_END          "mount_end"
@@ -150,19 +148,16 @@ storage_state_get_hash(const Instance &instance) noexcept
 	if (instance.storage == nullptr)
 		return 0;
 
-	std::set<std::string> mounts;
+	unsigned result = 0;
+
+	const std::hash<std::string_view> hash;
 
-	const auto visitor = [&mounts](const char *mount_uri, const Storage &storage) {
-		mounts.emplace(std::string(mount_uri) + ":" + storage.MapUTF8(""));
+	const auto visitor = [&result, &hash](const char *mount_uri, const Storage &storage) {
+		result = result * 33 + hash(mount_uri);
+		result = result * 33 + hash(storage.MapUTF8(""));
 	};
 
 	((CompositeStorage*)instance.storage)->VisitMounts(visitor);
 
-	boost::crc_32_type result;
-
-	for (const auto& mount : mounts) {
-		result.process_bytes(mount.c_str(), mount.length());
-	}
-
-	return result.checksum();
+	return result;
 }
