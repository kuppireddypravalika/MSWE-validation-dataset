From b6d2d4c0add10a4910abc06c7fbd2fdb8de1bca2 Mon Sep 17 00:00:00 2001
From: David Korth <gerbilsoft@gerbilsoft.com>
Date: Sat, 2 Feb 2019 10:22:43 -0500
Subject: [PATCH] [libromdata] Xbox360_XEX: xex2Security is **NOT** byteswapped
 in memory, so we need to use be32_to_cpu().

Moved the image_size caching to the 8 KB check.
---
 src/libromdata/Console/Xbox360_XEX.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/libromdata/Console/Xbox360_XEX.cpp b/src/libromdata/Console/Xbox360_XEX.cpp
index f15f54c40f..6e39c5a31c 100644
--- a/src/libromdata/Console/Xbox360_XEX.cpp
+++ b/src/libromdata/Console/Xbox360_XEX.cpp
@@ -503,8 +503,9 @@ CBCReader *Xbox360_XEX_Private::initPeReader(void)
 			}
 
 			// Image size must be at least 8 KB.
-			assert(be32_to_cpu(xex2Security.image_size >= PE_HEADER_SIZE));
-			if (xex2Security.image_size < PE_HEADER_SIZE) {
+			const uint32_t image_size = be32_to_cpu(xex2Security.image_size);
+			assert(image_size >= PE_HEADER_SIZE);
+			if (image_size < PE_HEADER_SIZE) {
 				// Too small.
 				delete reader[0];
 				delete reader[1];
@@ -551,7 +552,6 @@ CBCReader *Xbox360_XEX_Private::initPeReader(void)
 			// FIXME: It *might* be possible to randomly seek...
 			// Need to analyze the format more.
 			const int64_t fileSize = file->size();
-			const uint32_t image_size = be32_to_cpu(xex2Security.image_size);
 			if (fileSize > 64*1024*1024 || image_size > 64*1024*1024) {
 				// 64 MB is our compressed and uncompressed limit.
 				delete reader[0];
