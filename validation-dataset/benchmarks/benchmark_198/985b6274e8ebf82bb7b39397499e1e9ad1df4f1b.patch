From 985b6274e8ebf82bb7b39397499e1e9ad1df4f1b Mon Sep 17 00:00:00 2001
From: Martin Felis <martin.felis@iwr.uni-heidelberg.de>
Date: Fri, 13 Jul 2012 15:22:30 +0200
Subject: [PATCH] performance increase for ABA of 20% (forgot to use
 applyTranspose())

---
 src/Dynamics.cc | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/src/Dynamics.cc b/src/Dynamics.cc
index 83c7d32b..30bcfbbe 100644
--- a/src/Dynamics.cc
+++ b/src/Dynamics.cc
@@ -121,14 +121,15 @@ void ForwardDynamics (
 
 		unsigned int lambda = model.lambda[i];
 		if (lambda != 0) {
-			SpatialTransform X_lambda = model.X_lambda[i];
-
 			SpatialMatrix Ia = model.IA[i] - model.U[i] * (model.U[i] / model.d[i]).transpose();
 			SpatialVector pa = model.pA[i] + Ia * model.c[i] + model.U[i] * model.u[i] / model.d[i];
-
-			// note: X_lambda.inverse().spatial_adjoint() = X_lambda.transpose()
-			model.IA[lambda] = model.IA[lambda] + X_lambda.toMatrixTranspose() * Ia * X_lambda.toMatrix();
-			model.pA[lambda] = model.pA[lambda] + X_lambda.toMatrixTranspose() * pa;
+#ifdef EIGEN_CORE_H
+			model.IA[lambda].noalias() += model.X_lambda[i].toMatrixTranspose() * Ia * model.X_lambda[i].toMatrix();
+			model.pA[lambda].noalias() += model.X_lambda[i].applyTranspose(pa);
+#else
+			model.IA[lambda] += model.X_lambda[i].toMatrixTranspose() * Ia * model.X_lambda[i].toMatrix();
+			model.pA[lambda] += model.X_lambda[i].applyTranspose(pa);
+#endif
 		}
 	}
 
