From bdfc18d1868bedd46554fe004524f0b21df6a774 Mon Sep 17 00:00:00 2001
From: Baptiste Wicht <baptiste.wicht@gmail.com>
Date: Tue, 8 Aug 2017 11:15:08 +0200
Subject: [PATCH] Slight optimization for clang

---
 include/etl/impl/vec/gemm_rr_to_r.hpp | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/include/etl/impl/vec/gemm_rr_to_r.hpp b/include/etl/impl/vec/gemm_rr_to_r.hpp
index c3e09b859..c665e8931 100644
--- a/include/etl/impl/vec/gemm_rr_to_r.hpp
+++ b/include/etl/impl/vec/gemm_rr_to_r.hpp
@@ -19,6 +19,13 @@ namespace impl {
 
 namespace vec {
 
+// The 8-times unrolled loop is poorly handled by clang (3.9, 4.0)
+#ifndef ETL_GEMM_SMALL_RR_R_UNROLL_8
+#ifndef __clang__
+#define ETL_GEMM_SMALL_RR_R_UNROLL_8
+#endif
+#endif
+
 /*!
  * \brief Optimized version of small GEMM for row major version
  * \param a The lhs matrix
@@ -35,6 +42,7 @@ void gemm_small_kernel_rr_to_r(const T* a, const T* b, T* c, size_t M, size_t N,
 
     size_t j = 0;
 
+#ifdef ETL_GEMM_SMALL_RR_R_UNROLL_8
     for (; j + vec_size * 7 < j_end; j += vec_size * 8) {
         for (size_t i = 0; i < M; ++i) {
             auto r1 = vec_type::template zero<T>();
@@ -78,6 +86,7 @@ void gemm_small_kernel_rr_to_r(const T* a, const T* b, T* c, size_t M, size_t N,
             vec_type::storeu(c + i * N + j + 7 * vec_size, r8);
         }
     }
+#endif
 
     for (; j + vec_size * 3 < j_end; j += 4 * vec_size) {
         size_t i = 0;
