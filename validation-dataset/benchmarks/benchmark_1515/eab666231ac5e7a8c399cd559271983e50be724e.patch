From eab666231ac5e7a8c399cd559271983e50be724e Mon Sep 17 00:00:00 2001
From: rr- <mkurczew@gmail.com>
Date: Sat, 24 Oct 2015 13:38:05 +0200
Subject: [PATCH] pix: optimize creating grids from BGRA8888 data

---
 src/pix/grid.cc | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/src/pix/grid.cc b/src/pix/grid.cc
index 2ae647e49..2b612e7bb 100644
--- a/src/pix/grid.cc
+++ b/src/pix/grid.cc
@@ -1,4 +1,5 @@
 #include "pix/grid.h"
+#include <cstring>
 #include <algorithm>
 #include "err.h"
 #include "util/format.h"
@@ -25,13 +26,21 @@ struct Grid::Priv final
 
 void Grid::Priv::load(const bstr &input, Format fmt)
 {
-    int bpp = format_to_bpp(fmt);
-    if (input.size() < width * height * bpp)
+    const auto bpp = format_to_bpp(fmt);
+    const auto size = width * height;
+    if (input.size() < size * bpp)
         throw err::BadDataSizeError();
-    auto size = width * height;
     auto *input_ptr = input.get<const u8>();
     auto *pixels_ptr = &pixels[0];
 
+    // save those precious CPU cycles
+    if (fmt == Format::BGRA8888)
+    {
+        auto input_pixel_ptr = input.get<const pix::Pixel>();
+        std::memcpy(pixels_ptr, input_pixel_ptr, size * 4);
+        return;
+    }
+
     // anyone knows of sane alternative?
     switch (fmt)
     {
