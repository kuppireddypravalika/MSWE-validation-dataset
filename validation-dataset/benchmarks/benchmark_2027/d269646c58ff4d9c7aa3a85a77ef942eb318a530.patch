From d269646c58ff4d9c7aa3a85a77ef942eb318a530 Mon Sep 17 00:00:00 2001
From: Puya Amiri <pooya.w@gmail.com>
Date: Mon, 11 Oct 2021 18:52:14 +0200
Subject: [PATCH] avoid inlining internal continuations

---
 src/thorin/transform/inliner.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/thorin/transform/inliner.cpp b/src/thorin/transform/inliner.cpp
index 92a4022f2..21ebf9fae 100644
--- a/src/thorin/transform/inliner.cpp
+++ b/src/thorin/transform/inliner.cpp
@@ -50,7 +50,7 @@ void inliner(World& world) {
     };
 
     auto is_candidate = [&] (Continuation* continuation) -> Scope* {
-        if (!continuation->empty() && continuation->order() > 1) {
+        if (!continuation->empty() && continuation->order() > 1 && !continuation->is_external()) {
             auto scope = get_scope(continuation);
             if (scope->defs().size() < scope->entry()->num_params() * factor + offset) {
                 // check that the function is not recursive to prevent inliner from peeling loops
