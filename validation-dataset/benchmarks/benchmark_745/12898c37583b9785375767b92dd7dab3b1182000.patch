From 12898c37583b9785375767b92dd7dab3b1182000 Mon Sep 17 00:00:00 2001
From: Nicholas Coughlin <cnic@ca.ibm.com>
Date: Mon, 18 Sep 2017 16:47:07 -0400
Subject: [PATCH] Ignore irrelevant stores in local DSE

Local DSE will build up a list of stores to check
as it progresses through the block. Due to the
large number of dead stores in OSR blocks, this
can result in a significant compile time increase.

Signed-off-by: Nicholas Coughlin <cnic@ca.ibm.com>
---
 compiler/optimizer/LocalDeadStoreElimination.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/compiler/optimizer/LocalDeadStoreElimination.cpp b/compiler/optimizer/LocalDeadStoreElimination.cpp
index 650cd4821e..7693d9f8d4 100644
--- a/compiler/optimizer/LocalDeadStoreElimination.cpp
+++ b/compiler/optimizer/LocalDeadStoreElimination.cpp
@@ -754,7 +754,7 @@ void TR::LocalDeadStoreElimination::adjustStoresInfo(TR::Node *node, TR_BitVecto
    // being stored into as unused so that any dead store encountered above
    // can be removed if it does not feed a use.
    //
-   if (node->getOpCode().isStore())
+   if (node->getOpCode().isStore() && !(node->getSymbolReference()->getSymbol()->isAutoOrParm() && node->storedValueIsIrrelevant()))
       {
       TR::SymbolReference *symRef = node->getSymbolReference();
       TR::Symbol *sym = symRef->getSymbol();
