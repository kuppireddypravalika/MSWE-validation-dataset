From 6290dcd2443a0db65dcdba4dee41e27ad7dd143e Mon Sep 17 00:00:00 2001
From: Evan Brown <ezb@google.com>
Date: Mon, 22 Jul 2024 10:39:18 -0700
Subject: [PATCH] Move elements instead of copying in
 RepeatedField::ExtractSubrange.

Motivation: this matters when Element is Cord.
PiperOrigin-RevId: 654813293
---
 src/google/protobuf/repeated_field.h | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/google/protobuf/repeated_field.h b/src/google/protobuf/repeated_field.h
index c34746cbd0aae..5ff41a4c15e66 100644
--- a/src/google/protobuf/repeated_field.h
+++ b/src/google/protobuf/repeated_field.h
@@ -766,15 +766,17 @@ void RepeatedField<Element>::ExtractSubrange(int start, int num,
   ABSL_DCHECK_GE(num, 0);
   const int old_size = size();
   ABSL_DCHECK_LE(start + num, old_size);
+  Element* elem = unsafe_elements();
 
   // Save the values of the removed elements if requested.
   if (elements != nullptr) {
-    for (int i = 0; i < num; ++i) elements[i] = Get(i + start);
+    for (int i = 0; i < num; ++i) elements[i] = std::move(elem[i + start]);
   }
 
   // Slide remaining elements down to fill the gap.
   if (num > 0) {
-    for (int i = start + num; i < old_size; ++i) Set(i - num, Get(i));
+    for (int i = start + num; i < old_size; ++i)
+      elem[i - num] = std::move(elem[i]);
     Truncate(old_size - num);
   }
 }
