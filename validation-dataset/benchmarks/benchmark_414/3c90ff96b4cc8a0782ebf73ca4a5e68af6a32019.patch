From 3c90ff96b4cc8a0782ebf73ca4a5e68af6a32019 Mon Sep 17 00:00:00 2001
From: Jeff Arnold <jeffrey.arnold@gmail.com>
Date: Sun, 30 Jun 2013 18:50:40 -0400
Subject: [PATCH] remove usages of eval() since Stan does not use Eigen's
 expression templates

---
 .../distributions/multivariate/continuous/gaussian_dlm.hpp | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/stan/prob/distributions/multivariate/continuous/gaussian_dlm.hpp b/src/stan/prob/distributions/multivariate/continuous/gaussian_dlm.hpp
index 550eeb5bd36..749ebc3f465 100644
--- a/src/stan/prob/distributions/multivariate/continuous/gaussian_dlm.hpp
+++ b/src/stan/prob/distributions/multivariate/continuous/gaussian_dlm.hpp
@@ -457,9 +457,8 @@ namespace stan {
         for (int i = 0; i < y.cols(); i++) {
           // Predict state
           // reuse m and C instead of using a and R
-          // eval to avoid any aliasing issues with Eigen (?)
-          m = multiply(G, m).eval();
-          C = add(quad_form_sym(C, transpose(G)), W).eval();
+          m = multiply(G, m);
+          C = add(quad_form_sym(C, transpose(G)), W);
           for (int j = 0; j < y.rows(); ++j) {
             // predict observation
             T_lp yij(y(j, i));
@@ -482,7 +481,7 @@ namespace stan {
             // // // tcrossprod throws an error (ambiguous)
             // C = subtract(C, multiply(Q, tcrossprod(A)));
             C -= multiply(Q, multiply(A, transpose(A)));
-            C = 0.5 * add(C, transpose(C)).eval();
+            C = 0.5 * add(C, transpose(C));
             lp -= 0.5 * (log(Q) + pow(e, 2) * Q_inv);
           }
         }
