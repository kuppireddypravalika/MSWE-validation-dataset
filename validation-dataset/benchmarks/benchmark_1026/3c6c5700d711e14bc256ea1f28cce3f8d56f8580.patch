From 3c6c5700d711e14bc256ea1f28cce3f8d56f8580 Mon Sep 17 00:00:00 2001
From: David Stone <davidfromonline@gmail.com>
Date: Mon, 8 May 2023 12:29:31 -0600
Subject: [PATCH] Use most efficient version of `range_view` in `take`

---
 source/containers/take.cpp | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

diff --git a/source/containers/take.cpp b/source/containers/take.cpp
index 035453a0..6f2b7f03 100755
--- a/source/containers/take.cpp
+++ b/source/containers/take.cpp
@@ -194,14 +194,11 @@ constexpr auto take_impl(Range && source, Count const count) {
 				to_any_string<std::string>(count)
 			));
 		}
-		return containers::range_view(
-			containers::begin(OPERATORS_FORWARD(source)),
-			containers::end(OPERATORS_FORWARD(source))
-		);
+		return containers::range_view(OPERATORS_FORWARD(source));
 	} else if constexpr (sized_range<Range> and forward_random_access_iterator<iterator>) {
 		auto const true_count = bounded::min(containers::size(source), count);
 		auto first = random_access_counted_iterator<iterator, count_type>(containers::begin(OPERATORS_FORWARD(source)));
-		return containers::range_view(first, first + true_count);
+		return containers::range_view(first, true_count);
 	} else {
 		auto const used_count = count_type(bounded::min(count, numeric_traits::max_value<count_type>));
 		return containers::range_view(
