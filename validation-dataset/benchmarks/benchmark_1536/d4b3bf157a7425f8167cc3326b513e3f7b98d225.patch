From d4b3bf157a7425f8167cc3326b513e3f7b98d225 Mon Sep 17 00:00:00 2001
From: Will Dietz <wdietz2@illinois.edu>
Date: Tue, 8 May 2012 04:16:55 +0000
Subject: [PATCH] TD: Don't re-process the same graphs over and over when
 updating Globals Graph.

Drops TD on 403.gcc from 26s to 3s, for example.

Would expect to have even grander effect in EQTD, where it's significantly
more likely to have the same DSGraph for multiple functions /and/ due to
larger graph size that much more expensive to re-process.

Haven't measured that yet, though.

git-svn-id: https://llvm.org/svn/llvm-project/poolalloc/trunk@156367 91177308-0d34-0410-b5e6-96231b3b80d8
---
 lib/DSA/TopDownClosure.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/lib/DSA/TopDownClosure.cpp b/lib/DSA/TopDownClosure.cpp
index f649932c..1bc276d6 100644
--- a/lib/DSA/TopDownClosure.cpp
+++ b/lib/DSA/TopDownClosure.cpp
@@ -171,9 +171,11 @@ bool TDDataStructures::runOnModule(Module &M) {
 
   // Make sure each graph has updated external information about globals
   // in the globals graph.
+  VisitedGraph.clear();
   for (Module::iterator F = M.begin(); F != M.end(); ++F) {
     if (!(F->isDeclaration())){
       DSGraph *Graph  = getOrCreateGraph(F);
+      if (!VisitedGraph.insert(Graph).second) continue;
 
       cloneGlobalsInto(Graph, DSGraph::DontCloneCallNodes |
                         DSGraph::DontCloneAuxCallNodes);
