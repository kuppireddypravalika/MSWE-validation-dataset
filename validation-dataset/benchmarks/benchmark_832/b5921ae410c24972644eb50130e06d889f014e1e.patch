From b5921ae410c24972644eb50130e06d889f014e1e Mon Sep 17 00:00:00 2001
From: Kristian Sloth Lauszus <lauszus@gmail.com>
Date: Sun, 20 Nov 2016 05:07:46 -0600
Subject: [PATCH] Use BDCSVD class available in Eigen 3.3.0

I measured it to be approximatly twice as fast for large matrices compared to JacobiSVD
---
 PCA.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/PCA.cpp b/PCA.cpp
index 5b3ae42..4afe9e8 100644
--- a/PCA.cpp
+++ b/PCA.cpp
@@ -68,7 +68,8 @@ int32_t PCA::compute(const MatrixXi &images, int32_t numComponents /*= -1*/) {
 
         cout << "Calculating the SVD" << endl;
 #endif // NDEBUG
-        JacobiSVD<MatrixXf> svd(cov_matrix, ComputeThinV); // Calculate singular values
+        //JacobiSVD<MatrixXf> svd(cov_matrix, ComputeThinV); // Calculate singular values
+        BDCSVD<MatrixXf> svd(cov_matrix, ComputeThinV); // Calculate singular values
 
         if (K == -1) { // Calculate K based on cumulative energy instead of using hardcoded value - see: https://en.wikipedia.org/wiki/Principal_component_analysis#Compute_the_cumulative_energy_content_for_each_eigenvector
             VectorXf S = svd.singularValues(); // Get singular values
