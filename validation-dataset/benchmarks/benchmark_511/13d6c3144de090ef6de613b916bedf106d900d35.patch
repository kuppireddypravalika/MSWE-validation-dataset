From 13d6c3144de090ef6de613b916bedf106d900d35 Mon Sep 17 00:00:00 2001
From: Linas Vepstas <linasvepstas@gmail.com>
Date: Fri, 30 Jan 2015 13:03:59 -0600
Subject: [PATCH] guile: enable the recursive use of the evaluator.

Check to see if we are already in the guile environment, and, if so,
then just perform the evaluation immedaitely.  This shold solve Jim
Rutt's 20x problem.
---
 opencog/execution/ExecutionOutputLink.cc | 11 ++---------
 1 file changed, 2 insertions(+), 9 deletions(-)

diff --git a/opencog/execution/ExecutionOutputLink.cc b/opencog/execution/ExecutionOutputLink.cc
index 75636e12bf..19c9dcec8f 100644
--- a/opencog/execution/ExecutionOutputLink.cc
+++ b/opencog/execution/ExecutionOutputLink.cc
@@ -119,15 +119,8 @@ Handle ExecutionOutputLink::do_execute(AtomSpace* as, Handle gsn, Handle args)
         size_t pos = 4;
         while (' ' == schema[pos]) pos++;
 
-        // XXX We really need to not do the new/delete below.
-        // It hurts performance real bad. FIXME later
-        // However, schemeeval needs to be made re-entrant for
-        // this to work.
-        // SchemeEval* applier = get_evaluator(as);
-        SchemeEval* applier = new SchemeEval(as);
-        Handle h(applier->apply(schema.substr(pos), args));
-        delete applier;
-        return h;
+        SchemeEval* applier = get_evaluator(as);
+        return applier->apply(schema.substr(pos), args);
 #else
         throw RuntimeException(TRACE_INFO,
             "Cannot evaluate scheme GroundedSchemaNode!");
