From 4a8ebc1885733c0bacac59e1a3b283db291dcbcf Mon Sep 17 00:00:00 2001
From: Sean Reilly <sreilly@aegistg.com>
Date: Tue, 17 Mar 2015 19:13:05 -0400
Subject: [PATCH] Workaround for issue #114 - data_grid produces unpredictable
 results using linear interpolation, but only in Win64 - It only seems to
 happen for linear 2-D interpolation of ETOPO1 bathymetry, and only using the
 Release x64 model of Visual C+++ 2012 in Visual Studio 2013. Perhaps it has
 something to do with optimizing a recursive template function. - As a
 workaround, it seems to stop happening if we replace size_t next[NUM_DIMS]
 with size_t* next = new size_t[NUM_DIMS] in data_grid::linear.

---
 types/data_grid.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/types/data_grid.h b/types/data_grid.h
index 956c3139..2ff18d75 100644
--- a/types/data_grid.h
+++ b/types/data_grid.h
@@ -592,7 +592,7 @@ class USML_DLLEXPORT data_grid {
 
             // build interpolation coefficients
 
-            size_t next[NUM_DIMS];
+			size_t* next = new size_t[NUM_DIMS];	// dynamic creation works around Win64 problem
             memcpy(next, index, NUM_DIMS * sizeof(size_t));
             ++next[dim];
 
@@ -600,6 +600,7 @@ class USML_DLLEXPORT data_grid {
             const DATA_TYPE b = interp(dim - 1, next, location, db, deriv_vec);
             const size_t k = index[dim];
             seq_vector* ax = _axis[dim];
+			delete[] next;
 
             // compute field value in this dimension
 
