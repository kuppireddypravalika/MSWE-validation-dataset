From 1f9f9429860800eb5e351eeb5b5806fb177ee1ef Mon Sep 17 00:00:00 2001
From: Andrew Adams <andrew.b.adams@gmail.com>
Date: Wed, 3 Apr 2013 13:49:40 -0700
Subject: [PATCH] Re-enabled fast const division path for 8 and 32 bit on x86

Former-commit-id: 25eaac76973a3f3b3d4e1f399205cc2285f73cc6
---
 cpp/src/CodeGen_X86.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/cpp/src/CodeGen_X86.cpp b/cpp/src/CodeGen_X86.cpp
index 5bd1b34a70..ffb0afdb7d 100644
--- a/cpp/src/CodeGen_X86.cpp
+++ b/cpp/src/CodeGen_X86.cpp
@@ -296,7 +296,7 @@ void CodeGen_X86::visit(const Div *op) {
         Constant *shift = ConstantInt::get(llvm_type_of(op->type), shift_amount);
         value = builder->CreateLShr(numerator, shift);
     } else if (op->type.is_int() && 
-               op->type.bits == 16 && 
+               (op->type.bits == 8 || op->type.bits == 16 || op->type.bits == 32) && 
                const_divisor > 1 && 
                ((op->type.bits > 8 && const_divisor < 256) || const_divisor < 128)) {
 
@@ -347,7 +347,7 @@ void CodeGen_X86::visit(const Div *op) {
         value = builder->CreateXor(val, sign);
     
     } else if (op->type.is_uint() && 
-               op->type.bits == 16 && 
+               (op->type.bits == 8 || op->type.bits == 16 || op->type.bits == 32) && 
                const_divisor > 1 && const_divisor < 256) {
 
         int64_t method, multiplier, shift;
