From 08b6f6aa2f1c307e5300a723e129236c97badc31 Mon Sep 17 00:00:00 2001
From: Duncan Sands <baldrick@free.fr>
Date: Sat, 14 Nov 2009 10:59:38 +0000
Subject: [PATCH] Port commit 85982 (evancheng) from llvm-gcc: llvm-gcc is
 inlining too little at -O2 for C++ code. On WebKit, llvm-gcc compiled code is
 generally > 20% smaller, but it's > 5% slower. GCC mark all C++ member
 functions as "inline" and that makes it inline aggressively. After careful
 consideration, we have decided to increase -O2 inlining limit to 200 for C++
 code.

---
 dragonegg/llvm-backend.cpp | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/dragonegg/llvm-backend.cpp b/dragonegg/llvm-backend.cpp
index e7146c810e0d..2325cc91196c 100644
--- a/dragonegg/llvm-backend.cpp
+++ b/dragonegg/llvm-backend.cpp
@@ -263,11 +263,20 @@ void handleVisibility(tree decl, GlobalValue *GV) {
 // inliner.  gcc has many options that control inlining, but we have decided
 // not to support anything like that for llvm-gcc.
 static unsigned GuessAtInliningThreshold() {
-  unsigned threshold = 200;
-  if (!flag_inline_functions)
+  if (optimize_size)
     // Reduce inline limit.
-    threshold = 50;
-  return threshold;
+    return 50;
+  
+  if (optimize >= 3)
+    return 200;
+
+  // gcc mark C++ member functions "inline" and inline them more aggressively.
+  // We are not going to do that. Up the inline threshold when compiling for
+  // C++.
+  StringRef LanguageName = lang_hooks.name;
+  if (LanguageName == "GNU C++" || LanguageName == "GNU Objective-C++")
+    return 200;
+  return 50;
 }
 
 #ifndef LLVM_TARGET_NAME
