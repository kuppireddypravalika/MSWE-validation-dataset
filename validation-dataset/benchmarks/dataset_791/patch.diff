From bc9a18f344c46cee1056eff689098863311ca6ca Mon Sep 17 00:00:00 2001
From: Martin Suda <martin.suda@cvut.cz>
Date: Mon, 28 Aug 2023 12:32:57 +0200
Subject: [PATCH] don't add to distinct groups conditionally (this was only an
 optimization, preventing the groups to grow too much when knowing they will
 not be expanded; on the other hand, it created this ugly sync-point with
 DistinctGroupExpansion::apply

---
 Kernel/Signature.cpp | 11 ++---------
 1 file changed, 2 insertions(+), 9 deletions(-)

diff --git a/Kernel/Signature.cpp b/Kernel/Signature.cpp
index 0de3880071..b2168289ff 100644
--- a/Kernel/Signature.cpp
+++ b/Kernel/Signature.cpp
@@ -121,7 +121,7 @@ void Signature::Symbol::destroyTypeConSymbol()
  * A constant can be added into one particular distinct group
  * at most once
  *
- * We also record the symbol in the group's members, under certain conditions
+ * We also record the symbol in the group's members
  */
 void Signature::Symbol::addToDistinctGroup(unsigned group,unsigned this_number)
 {
@@ -129,17 +129,10 @@ void Signature::Symbol::addToDistinctGroup(unsigned group,unsigned this_number)
   ASS(!List<unsigned>::member(group, _distinctGroups))
 
   List<unsigned>::push(group, _distinctGroups);
-
   env.signature->_distinctGroupsAddedTo=true;
 
   Signature::DistinctGroupMembers members = env.signature->_distinctGroupMembers[group];
-  if(members->size() <= DistinctGroupExpansion::EXPAND_UP_TO_SIZE
-                       || env.options->saturationAlgorithm()==Options::SaturationAlgorithm::FINITE_MODEL_BUILDING){
-    // we add one more than EXPAND_UP_TO_SIZE to signal to DistinctGroupExpansion::apply not to expand
-    // ... instead DistinctEqualitySimplifier will take over
-    members->push(this_number);
-  }
-
+  members->push(this_number);
 } // addToDistinctGroup
 
 /**
