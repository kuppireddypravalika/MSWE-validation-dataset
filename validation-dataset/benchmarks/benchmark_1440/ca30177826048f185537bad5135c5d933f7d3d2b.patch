From ca30177826048f185537bad5135c5d933f7d3d2b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Pawe=C5=82=20Bylica?= <chfast@gmail.com>
Date: Fri, 14 Feb 2020 17:07:38 +0100
Subject: [PATCH] bench: Speed up wabt execution startup

WABT Executor/Thread will init both value and call stack vectors with zeros up front. To mitigate the overhead, we set sizes to much lower values than default ones.
---
 test/utils/wabt_engine.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/test/utils/wabt_engine.cpp b/test/utils/wabt_engine.cpp
index 12a54d9dc..fbdf9474e 100644
--- a/test/utils/wabt_engine.cpp
+++ b/test/utils/wabt_engine.cpp
@@ -71,7 +71,13 @@ std::optional<WasmEngine::FuncRef> WabtEngine::find_function(std::string_view na
 WasmEngine::Result WabtEngine::execute(
     WasmEngine::FuncRef func_ref, const std::vector<uint64_t>& args)
 {
-    wabt::interp::Executor executor{&m_env};
+    // WABT Executor/Thread will init both value and call stack vectors with zeros up front.
+    // To mitigate the performance overhead, we set sizes to much lower values
+    // than default ones.
+    wabt::interp::Thread::Options thread_options;
+    thread_options.value_stack_size = 1024;  // Default: 32k.
+    thread_options.call_stack_size = 1024;   // Default: 64k.
+    wabt::interp::Executor executor{&m_env, nullptr, thread_options};
 
     const auto* e = reinterpret_cast<const wabt::interp::Export*>(func_ref);
 
