From de588ee999f35e67a4f3df4e7a697bb69073cd5f Mon Sep 17 00:00:00 2001
From: James Pallister <james.pallister@bristol.ac.uk>
Date: Wed, 8 Jul 2015 18:28:50 +0100
Subject: [PATCH] Added speed improvement for the generic canonical iterator

---
 src/algorithms/canonical.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/algorithms/canonical.cpp b/src/algorithms/canonical.cpp
index ad8eabc..9300243 100644
--- a/src/algorithms/canonical.cpp
+++ b/src/algorithms/canonical.cpp
@@ -313,7 +313,12 @@ pair<vector<unsigned>,bool> canonicalMapping(vector<RegisterSlot*> &slotlist,
             continue;
         }
 
-        if(possibilities[i] >= (int) possibles.size())
+        // We return to the previous value if we have exceeded the number of
+        // possibles, or if we have tested more values than there are
+        // positions left. The latter condition is a speed up - if it is not
+        // there, large classes will be explored full, making this function
+        // take up to seconds (!) to execute.
+        if(possibilities[i] >= (int) possibles.size() || possibilities[i] > possibilities.size() - i)
         {
             if(i == 0)
                 break;
