From 395880b8eab3e5e8b1d3d15e86f25f0abffd214b Mon Sep 17 00:00:00 2001
From: Unknown <targetjr>
Date: Wed, 27 Jun 2001 10:43:34 -0400
Subject: [PATCH] using vnl_math::sqrt2 instead of vcl_sqrt(2.0)

---
 contrib/gel/gevd/gevd_contour.cxx | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/contrib/gel/gevd/gevd_contour.cxx b/contrib/gel/gevd/gevd_contour.cxx
index f7be5423d3a..11ec24a7aa7 100644
--- a/contrib/gel/gevd/gevd_contour.cxx
+++ b/contrib/gel/gevd/gevd_contour.cxx
@@ -42,13 +42,13 @@
 // #include <cool/ArrayP.h>
 // #include <cool/ListP.h>
 // #include <iostream.h>
-#include <vcl_cmath.h>     // for vcl_abs()
-#include <vcl_cstdlib.h>   // for vcl_abs()
+#include <vcl_cstdlib.h>   // for vcl_abs(int)
 #include <vcl_cassert.h>
 #include <vcl_vector.h>
 #include <vcl_algorithm.h> // for vcl_max()
 
 #include <vil/vil_byte.h>
+#include <vnl/vnl_math.h>     // for sqrt(2)
 
 #include <vdgl/vdgl_digital_curve_sptr.h>
 #include <vdgl/vdgl_edgel_chain_sptr.h>
@@ -245,7 +245,7 @@ gevd_contour::FindNetwork(gevd_bufferxy& edgels,
 bool
 Ongevd_contour(const gevd_bufferxy& edgels, const int i, const int j)
 {
-  float pix = (1 + vcl_sqrt(2.0)) * floatPixel(edgels, i, j); // fuzzy threshold
+  float pix = (1 + vnl_math::sqrt2) * floatPixel(edgels, i, j); // fuzzy threshold
   for (vil_byte dir = 0; dir < TWOPI; dir += HALFPI) // 4-connected only
     if (floatPixel(edgels, i+DIS[dir], j+DJS[dir]) > pix)
       return false;             // should choose neighbor instead
