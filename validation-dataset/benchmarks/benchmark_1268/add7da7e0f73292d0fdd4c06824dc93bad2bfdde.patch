From add7da7e0f73292d0fdd4c06824dc93bad2bfdde Mon Sep 17 00:00:00 2001
From: Charles Ofria <charles.ofria@gmail.com>
Date: Wed, 17 Aug 2016 22:36:36 -0400
Subject: [PATCH] Setup calculating bits past decimal point in exponents to
 quick calculations.

---
 extras/calc_pow.cc | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/extras/calc_pow.cc b/extras/calc_pow.cc
index c46f4f7379..648e5e533d 100644
--- a/extras/calc_pow.cc
+++ b/extras/calc_pow.cc
@@ -3,13 +3,24 @@
 
 int main()
 {
-  const double steps = 1024.0;
-  for (double i = 0.0; i < steps; i += 1.0) {
-    double val = i/steps;
-    // std::cout << i << " " << steps << " " << val << " : " << std::log2(val) << std::endl;
-    std::cout << std::pow(2, val) << ",";
-    if (((int) i) % 8 == 7) std::cout << std::endl;
-    else std::cout << " ";
+//   const double steps = 1024.0;
+//   for (double i = 0.0; i < steps; i += 1.0) {
+//     double val = i/steps;
+//     // std::cout << i << " " << steps << " " << val << " : " << std::log2(val) << std::endl;
+//     std::cout << std::pow(2, val) << ",";
+//     if (((int) i) % 8 == 7) std::cout << std::endl;
+//     else std::cout << " ";
+//   }
+
+
+  // We really only need to know the effect of each bit past the decimal point on pow.
+  std::cout.setf( std::ios::fixed, std:: ios::floatfield );
+  double val = 1.0;
+  for (int i = 0; i < 16; i++) {
+    val /= 2.0;
+    std::cout << std::pow(2.0, val) << ", ";
   }
+
+
   std::cout << std::endl;
 }
