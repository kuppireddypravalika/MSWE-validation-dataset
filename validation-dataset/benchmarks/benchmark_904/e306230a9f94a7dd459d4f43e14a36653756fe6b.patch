From e306230a9f94a7dd459d4f43e14a36653756fe6b Mon Sep 17 00:00:00 2001
From: Wim Lavrijsen <WLavrijsen@lbl.gov>
Date: Mon, 13 Apr 2009 17:23:48 +0000
Subject: [PATCH] optimization for loading classes

git-svn-id: http://root.cern.ch/svn/root/trunk@28193 27541ba8-7e3a-0410-8455-c3a389f83636
---
 bindings/pyroot/src/RootWrapper.cxx | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/bindings/pyroot/src/RootWrapper.cxx b/bindings/pyroot/src/RootWrapper.cxx
index 92c2d0c32390f..7779173e0b0e7 100644
--- a/bindings/pyroot/src/RootWrapper.cxx
+++ b/bindings/pyroot/src/RootWrapper.cxx
@@ -323,6 +323,10 @@ int PyROOT::BuildRootClassDict( const T& klass, PyObject* pyclass ) {
    if ( ! isNamespace && ! hasConstructor )
       cache[ "__init__" ].push_back( new TConstructorHolder< T, M >( klass ) );
 
+// bypass custom __getattr__ for efficiency
+   getattrofunc oldgetattro = pyclass->ob_type->tp_getattro;
+   pyclass->ob_type->tp_getattro = PyType_Type.tp_getattro;
+
 // add the methods to the class dictionary
    for ( CallableCache_t::iterator imd = cache.begin(); imd != cache.end(); ++imd ) {
    // in order to prevent removing templated editions of this method (which were set earlier,
@@ -377,6 +381,9 @@ int PyROOT::BuildRootClassDict( const T& klass, PyObject* pyclass ) {
       }
    }
 
+// restore custom __getattr__
+   pyclass->ob_type->tp_getattro = oldgetattro;
+
 // all ok, done
    return 0;
 }
