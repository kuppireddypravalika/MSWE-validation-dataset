From 5a830880cc4f3175dd36e8b37876328cb7866379 Mon Sep 17 00:00:00 2001
From: Pilow <pierre.laupretre@gmail.com>
Date: Tue, 30 Jan 2018 22:08:11 +0800
Subject: [PATCH] [set] Use compiler methods to build a set

---
 src/compiler/value/Set.cpp | 17 +++--------------
 1 file changed, 3 insertions(+), 14 deletions(-)

diff --git a/src/compiler/value/Set.cpp b/src/compiler/value/Set.cpp
index c2459c52..93c5dc98 100644
--- a/src/compiler/value/Set.cpp
+++ b/src/compiler/value/Set.cpp
@@ -99,28 +99,17 @@ Compiler::value Set::compile(Compiler& c) const {
 															(void*) Set_insert_ptr;
 
 	unsigned ops = 1;
-
-	jit_type_t sig = jit_type_create_signature(jit_abi_cdecl, LS_POINTER, {}, 0, 1);
-	jit_value_t s = jit_insn_call_native(c.F, "create_set", (void*) create, sig, {}, 0, JIT_CALL_NOTHROW);
-	jit_type_free(sig);
-
-	jit_type_t args[2] = {LS_POINTER, type.getElementType().jit_type()};
-	sig = jit_type_create_signature(jit_abi_cdecl, jit_type_void, args, 2, 1);
+	auto s = c.insn_call(type, {}, (void*) create);
 
 	double i = 0;
 	for (Value* ex : expressions) {
 		auto v = ex->compile(c);
 		ex->compile_end(c);
-
-		jit_value_t args_v[] = {s, v.v};
-		jit_insn_call_native(c.F, "insert", (void*) insert, sig, args_v, 2, JIT_CALL_NOTHROW);
+		c.insn_call(Type::VOID, {s, v}, (void*) insert);
 		ops += std::log2(++i);
 	}
-	jit_type_free(sig);
-
 	c.inc_ops(ops);
-
-	return {s, type};
+	return s;
 }
 
 Value* Set::clone() const {
