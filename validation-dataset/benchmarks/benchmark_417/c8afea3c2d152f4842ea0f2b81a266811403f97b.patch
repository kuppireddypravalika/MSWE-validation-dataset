From c8afea3c2d152f4842ea0f2b81a266811403f97b Mon Sep 17 00:00:00 2001
From: Even Rouault <even.rouault@mines-paris.org>
Date: Sun, 13 Oct 2013 19:35:04 +0000
Subject: [PATCH] Spatialite: make creation of database much faster with
 spatialite 4.1 by using InitSpatialMetaData(1)
 (https://trac.osgeo.org/gdal/ticket/5270)

git-svn-id: https://svn.osgeo.org/gdal/trunk@26532 f0d54148-0727-0410-94bb-9a71ac55c965
---
 gdal/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/gdal/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp b/gdal/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp
index 06e78b2324bf..c447adabbd9e 100644
--- a/gdal/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp
+++ b/gdal/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp
@@ -579,7 +579,16 @@ int OGRSQLiteDataSource::Create( const char * pszNameIn, char **papszOptions )
             OGRSQLiteGetSpatialiteVersionNumber() >= 40 )
             osCommand =  "SELECT InitSpatialMetadata('NONE')";
         else
-            osCommand =  "SELECT InitSpatialMetadata()";
+        {
+            /* Since spatialite 4.1, InitSpatialMetadata() is no longer run */
+            /* into a transaction, which makes population of spatial_ref_sys */
+            /* from EPSG awfully slow. We have to use InitSpatialMetadata(1) */
+            /* to run within a transaction */
+            if( OGRSQLiteGetSpatialiteVersionNumber() >= 41 )
+                osCommand =  "SELECT InitSpatialMetadata(1)";
+            else
+                osCommand =  "SELECT InitSpatialMetadata()";
+        }
         rc = sqlite3_exec( hDB, osCommand, NULL, NULL, &pszErrMsg );
         if( rc != SQLITE_OK )
         {
