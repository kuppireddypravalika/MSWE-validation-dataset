From a1c96834851b73d021589ae9cfa272811da9bf3a Mon Sep 17 00:00:00 2001
From: Matthias Kramm <kramm@google.com>
Date: Fri, 8 Jun 2018 19:17:17 -0700
Subject: [PATCH] use clzll instead of clz, for 64 bit integers

---
 src/CodeGen_C.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/CodeGen_C.cpp b/src/CodeGen_C.cpp
index c63678c69b..c439b23e71 100644
--- a/src/CodeGen_C.cpp
+++ b/src/CodeGen_C.cpp
@@ -1951,7 +1951,12 @@ void CodeGen_C::visit(const Call *op) {
     } else if (op->is_intrinsic(Call::count_leading_zeros)) {
         internal_assert(op->args.size() == 1);
         string a0 = print_expr(op->args[0]);
-        rhs << "__builtin_clz(" << a0 << ")";
+        // TODO: This logic should probably take the target into account.
+        if (op->args[0].type().bits() == 64) {
+          rhs << "__builtin_clzll(" << a0 << ")";
+        } else {
+          rhs << "__builtin_clz(" << a0 << ")";
+        }
     } else if (op->is_intrinsic(Call::lerp)) {
         internal_assert(op->args.size() == 3);
         Expr e = lower_lerp(op->args[0], op->args[1], op->args[2]);
