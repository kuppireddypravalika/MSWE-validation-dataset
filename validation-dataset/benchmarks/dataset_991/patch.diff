From 956d66f2fd397bf674bbf5f8a9651e4656778d2d Mon Sep 17 00:00:00 2001
From: Albeleon <alleme.9313@gmail.com>
Date: Wed, 4 Jul 2018 18:48:31 +0200
Subject: [PATCH] "2.26: RM2000 + RM2003: When calculating an actor's state
 probability, the armor state resistance should be also taken. If there are
 many armors with state protection of the same type, only the one with the
 most resistance will be taken, they don't stack."

Solution: In Game_Actor::GetStateProbability, check all the armor, see if they resist the current state, and if they do, save the resistance percentage. It will only take the most resistent. After that, it is multiplied to the result and divided by 100.
---
 src/game_actor.cpp | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/game_actor.cpp b/src/game_actor.cpp
index 0a2b480db5..430ded09d1 100644
--- a/src/game_actor.cpp
+++ b/src/game_actor.cpp
@@ -573,15 +573,25 @@ int Game_Actor::GetNextExp(int level) const {
 }
 
 int Game_Actor::GetStateProbability(int state_id) const {
-	int rate = 2; // C - default
+	int rate = 2, mul = 100; // C - default
 
 	const uint8_t* r = ReaderUtil::GetElement(GetActor().state_ranks, state_id);
 	if (r) {
 		rate = *r;
 	}
 
+	// This takes the armor of the character with the most resistance for that particular state
+	for (const auto equipment : GetWholeEquipment()) {
+		RPG::Item* item = ReaderUtil::GetElement(Data::items, equipment);
+		if (item != nullptr && (item->type == RPG::Item::Type_shield || item->type == RPG::Item::Type_armor
+			|| item->type == RPG::Item::Type_helmet || item->type == RPG::Item::Type_accessory)
+			&& state_id  <= item->state_set.size() && item->state_set[state_id - 1]) {
+			mul = std::min(mul, 100 - item->state_chance);
+		}
+	}
+
 	// GetStateRate verifies the state_id
-	return GetStateRate(state_id, rate);
+	return GetStateRate(state_id, rate) * mul / 100;
 }
 
 int Game_Actor::GetAttributeModifier(int attribute_id) const {
