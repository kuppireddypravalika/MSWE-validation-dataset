From f76d126d017f5a992c0ad105e592893a7d6f85b4 Mon Sep 17 00:00:00 2001
From: Sainan <63328889+Sainan@users.noreply.github.com>
Date: Sat, 20 Aug 2022 18:47:34 +0200
Subject: [PATCH] Optimise codegen for modulo operations with modulus that's a
 power of 2

---
 src/lcode.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/lcode.cpp b/src/lcode.cpp
index e4f70d7bc..1b541da63 100644
--- a/src/lcode.cpp
+++ b/src/lcode.cpp
@@ -1684,6 +1684,10 @@ void luaK_posfix (FuncState *fs, BinOpr opr,
   luaK_dischargevars(fs, e2);
   if (foldbinop(opr) && constfolding(fs, opr + LUA_OPADD, e1, e2))
     return;  /* done by folding */
+  if (opr == OPR_MOD && e2->k == VKINT && luaispow2(e2->u.ival)) {
+    opr = OPR_BAND;
+    --e2->u.ival;
+  }
   switch (opr) {
     case OPR_AND: {
       lua_assert(e1->t == NO_JUMP);  /* list closed by 'luaK_infix' */
