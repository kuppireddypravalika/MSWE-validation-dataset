From c601a3daab5b2a949b0e5857dc42e2a93fb2c264 Mon Sep 17 00:00:00 2001
From: Flavio Cruz <flaviocruz@gmail.com>
Date: Wed, 5 Nov 2014 23:35:44 +0000
Subject: [PATCH] Change pop_half to steal the binary tree by half instead of
 the top half.

---
 queue/safe_complex_pqueue.hpp | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/queue/safe_complex_pqueue.hpp b/queue/safe_complex_pqueue.hpp
index 451408e1..9eaad59c 100644
--- a/queue/safe_complex_pqueue.hpp
+++ b/queue/safe_complex_pqueue.hpp
@@ -141,11 +141,24 @@ class intrusive_safe_complex_pqueue
       LOCK_STAT(ready_lock);
 
       const size_t half(std::min(max, heap.size()/2));
+      size_t got(0);
+      if(got == half)
+         return half;
+
+      size_t level(2);
+      for(size_t i(1); i < heap.size(); ) {
+         for(size_t j(0); j < level/2; ++j) {
+            heap_object obj(heap[i + j]);
+            do_remove(obj, new_state);
+            buffer[got++] = obj;
+            if(got == half)
+               return half;
+         }
+         i += level;
+         level <<= 1;
+      }
 
-      for(size_t i(0); i < half; ++i)
-         buffer[i] = do_pop(new_state);
-
-      return half;
+      return got;
    }
 
    inline heap_object pop_best(intrusive_safe_complex_pqueue<T>& other, const queue_id_t new_state)
