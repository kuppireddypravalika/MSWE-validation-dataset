From 654cd520885bd74828ea831bda2e6cc6816a684c Mon Sep 17 00:00:00 2001
From: Brandon Schaefer <brandon.schaefer@canonical.com>
Date: Fri, 29 Sep 2017 07:16:35 -0700
Subject: [PATCH] * Avoid overflowing when sizeof(long) == sizeof(int) then
 max::long * value overflows

---
 src/miral/window_info.cpp | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/miral/window_info.cpp b/src/miral/window_info.cpp
index f764b76e063..12d1d0ae980 100644
--- a/src/miral/window_info.cpp
+++ b/src/miral/window_info.cpp
@@ -304,7 +304,8 @@ void miral::WindowInfo::constrain_resize(Point& requested_pos, Size& requested_s
     {
         auto const ar = min_aspect();
 
-        auto const error = new_size.height.as_int()*long(ar.width) - new_size.width.as_int()*long(ar.height);
+        auto const error = new_size.height.as_int()*static_cast<long long>(ar.width) -
+                           new_size.width.as_int() *static_cast<long long>(ar.height);
 
         if (error > 0)
         {
@@ -326,7 +327,8 @@ void miral::WindowInfo::constrain_resize(Point& requested_pos, Size& requested_s
     {
         auto const ar = max_aspect();
 
-        auto const error = new_size.width.as_int()*long(ar.height) - new_size.height.as_int()*long(ar.width);
+        auto const error = new_size.width.as_int() *static_cast<long long>(ar.height) -
+                           new_size.height.as_int()*static_cast<long long>(ar.width);
 
         if (error > 0)
         {
