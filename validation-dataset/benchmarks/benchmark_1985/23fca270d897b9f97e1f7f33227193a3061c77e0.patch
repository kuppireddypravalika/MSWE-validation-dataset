From 23fca270d897b9f97e1f7f33227193a3061c77e0 Mon Sep 17 00:00:00 2001
From: Jeff Trull <edaskel@att.net>
Date: Mon, 3 Jun 2013 22:28:09 -0700
Subject: [PATCH] use Eigen feature to roll up calculation loop into matrix
 arithmetic

---
 analysis/parasitics/rlc_prima_eigen_odeint.cpp | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/analysis/parasitics/rlc_prima_eigen_odeint.cpp b/analysis/parasitics/rlc_prima_eigen_odeint.cpp
index 3ebf634..f22f0ef 100644
--- a/analysis/parasitics/rlc_prima_eigen_odeint.cpp
+++ b/analysis/parasitics/rlc_prima_eigen_odeint.cpp
@@ -203,12 +203,8 @@ struct rlc_tank {
     Map<const Matrix<double, 3, 1> > xvec(x.data());  // turn state vector into Eigen matrix
     Matrix<double, 1, 1> u; u << Va;                  // input excitation is 1x1 vector of Va
 
-    // BOZO one more rollup using Eigen features should be possible here:
-    for (size_t nodeno = 0; nodeno <= 2; ++nodeno)
-    {
-      // dx/dt = (Cprime.inverse() * -Gprime) * x + (Cprime.inverse() * Bprime) * u
-      dxdt[nodeno] = coeff_.row(nodeno).dot(xvec) + input_.row(nodeno).dot(u);
-    }
+    Map<Matrix<double, 3, 1> > result(dxdt.data());
+    result = coeff_ * xvec + input_ * u;
 
   }
 
