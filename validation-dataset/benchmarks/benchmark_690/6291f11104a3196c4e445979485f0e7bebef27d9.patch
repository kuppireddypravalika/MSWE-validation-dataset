From 6291f11104a3196c4e445979485f0e7bebef27d9 Mon Sep 17 00:00:00 2001
From: aph <unknown>
Date: Thu, 19 Dec 2013 17:24:29 +0000
Subject: [PATCH] Use ADD after ARDP rather than LEA.

---
 src/cpu/aarch64/vm/macroAssembler_aarch64.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/cpu/aarch64/vm/macroAssembler_aarch64.cpp b/src/cpu/aarch64/vm/macroAssembler_aarch64.cpp
index 479199f72..30205098d 100644
--- a/src/cpu/aarch64/vm/macroAssembler_aarch64.cpp
+++ b/src/cpu/aarch64/vm/macroAssembler_aarch64.cpp
@@ -2617,7 +2617,12 @@ void MacroAssembler::eden_allocate(Register obj,
     {
       unsigned long offset;
       adrp(rscratch1, heap_top, offset);
-      lea(rscratch1, Address(rscratch1, offset));
+      // Use add() here after ARDP, rather than lea().
+      // lea() does not generate anything if its offset is zero.
+      // However, relocs expect to find either an ADD or a load/store
+      // insn after an ADRP.  add() always generates an ADD insn, even
+      // for add(Rn, Rn, 0).
+      add(rscratch1, rscratch1, offset);
       ldaxr(obj, rscratch1);
     }
 
