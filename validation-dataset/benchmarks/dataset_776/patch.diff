From 6cba2167851bc038ca8da2ea3aae7fa70b1997a3 Mon Sep 17 00:00:00 2001
From: Vincent Bousquet <vincent.bousqt@gmail.com>
Date: Mon, 30 Oct 2023 20:57:55 +0100
Subject: [PATCH] Optimization: when opacity is >= 0.999, part is opaque

---
 src/renderer/Shader.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/renderer/Shader.cpp b/src/renderer/Shader.cpp
index d73b70863d..194558b297 100644
--- a/src/renderer/Shader.cpp
+++ b/src/renderer/Shader.cpp
@@ -493,6 +493,11 @@ void Shader::SetMaterial(const Material* const mat, const bool has_alpha)
       fEdge = mat->m_fEdge;
       fEdgeAlpha = mat->m_fEdgeAlpha;
       fOpacity = mat->m_fOpacity;
+      // VPX before 10.8 used to discard alpha of texture if opacity was 1, so lots of table author used a workaround by defining an opacity just below 1
+      // As of VPX 10.8, the alpha channel of the texture is considered so we do not need this, and we discard it to have the corresponding parts processed 
+      // in the right pass between opaque & transparent
+      if (fOpacity >= 0.999f && fOpacity < 1.f)
+         fOpacity = 1.f;
       cBase = mat->m_cBase;
       cGlossy = mat->m_cGlossy;
       cClearcoat = mat->m_cClearcoat;
