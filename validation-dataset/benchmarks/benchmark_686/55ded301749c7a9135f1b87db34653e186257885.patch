From 55ded301749c7a9135f1b87db34653e186257885 Mon Sep 17 00:00:00 2001
From: John Criswell <jtcriswel@gmail.com>
Date: Thu, 6 Apr 2017 16:47:27 -0400
Subject: [PATCH] Enabled sandboxing of stores of data less than 64 bits.

Enabled the code that moves values less than 64 bits in size into
memory when the pointer to the memory is stored in a register.
---
 llvm/lib/Target/X86/X86SFIOptPass.cpp | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/llvm/lib/Target/X86/X86SFIOptPass.cpp b/llvm/lib/Target/X86/X86SFIOptPass.cpp
index 28b4cf00..39e44718 100644
--- a/llvm/lib/Target/X86/X86SFIOptPass.cpp
+++ b/llvm/lib/Target/X86/X86SFIOptPass.cpp
@@ -1042,8 +1042,6 @@ bool X86SFIOptPass::runOnMachineFunction(MachineFunction& F){
       break;
 #endif
 
-#if 0
-      // JTC: Enable later
 		case X86::MOV16mi:
 		case X86::MOV16mr:
 		case X86::MOV32mi:
@@ -1054,7 +1052,6 @@ bool X86SFIOptPass::runOnMachineFunction(MachineFunction& F){
 		  if(MI->modifiesRegister(X86::EBP, TRI))
 			insertMaskAfterReg(MBB,MI,dl,TII,X86::EBP);
 		  break;
-#endif
 
 #if 0
     /* TODO: See how tail calls are implemented now */
