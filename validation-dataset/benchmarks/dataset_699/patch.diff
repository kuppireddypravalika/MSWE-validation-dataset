From 91d27e24dbbf158d93cf3b22cbf6dd170979d1d3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Markus=20H=C3=A4rer?= <markus.haerer@gmx.net>
Date: Fri, 3 Feb 2023 02:12:46 +0100
Subject: [PATCH] CDirtyRegionTracker: Make the CleanMarkedRegions() method
 more efficient

Without that change >100MB of data are copied around inside the vector every
second according to Valgrinds DHAT tool in "copy mode".
---
 xbmc/guilib/DirtyRegionTracker.cpp | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/xbmc/guilib/DirtyRegionTracker.cpp b/xbmc/guilib/DirtyRegionTracker.cpp
index 398d455031989..a016601ad9e6e 100644
--- a/xbmc/guilib/DirtyRegionTracker.cpp
+++ b/xbmc/guilib/DirtyRegionTracker.cpp
@@ -10,10 +10,12 @@
 
 #include "DirtyRegionSolvers.h"
 #include "ServiceBroker.h"
+#include "guilib/DirtyRegion.h"
 #include "settings/AdvancedSettings.h"
 #include "settings/SettingsComponent.h"
 #include "utils/log.h"
 
+#include <algorithm>
 #include <stdio.h>
 
 CDirtyRegionTracker::CDirtyRegionTracker(int buffering)
@@ -77,12 +79,8 @@ CDirtyRegionList CDirtyRegionTracker::GetDirtyRegions()
 void CDirtyRegionTracker::CleanMarkedRegions()
 {
   int buffering = CServiceBroker::GetSettingsComponent()->GetAdvancedSettings()->m_guiVisualizeDirtyRegions ? 20 : m_buffering;
-  int i = m_markedRegions.size() - 1;
-  while (i >= 0)
-	{
-    if (m_markedRegions[i].UpdateAge() >= buffering)
-      m_markedRegions.erase(m_markedRegions.begin() + i);
-
-    i--;
-  }
+  m_markedRegions.erase(
+      std::remove_if(m_markedRegions.begin(), m_markedRegions.end(),
+                     [buffering](CDirtyRegion& r) { return r.UpdateAge() >= buffering; }),
+      m_markedRegions.end());
 }
