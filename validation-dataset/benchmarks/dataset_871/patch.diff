From c63b60902d18c59232292ab2c49910ce2dbb7ce2 Mon Sep 17 00:00:00 2001
From: Tom Tang <xmader@distributive.network>
Date: Tue, 24 Sep 2024 11:28:36 +0000
Subject: [PATCH] perf: simply do a pythonic `result = list[:]` to get a copy
 of all items to the new list

---
 src/PyListProxyHandler.cc | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

diff --git a/src/PyListProxyHandler.cc b/src/PyListProxyHandler.cc
index e6f17f7f..4a5cd9dc 100644
--- a/src/PyListProxyHandler.cc
+++ b/src/PyListProxyHandler.cc
@@ -550,15 +550,7 @@ static bool array_concat(JSContext *cx, unsigned argc, JS::Value *vp) {
   PyObject *self = JS::GetMaybePtrFromReservedSlot<PyObject>(proxy, PyObjectSlot);
 
   Py_ssize_t selfSize = PyList_GET_SIZE(self);
-
-  PyObject *result = PyList_New(selfSize);
-
-  // Copy items to the new list
-  for (Py_ssize_t index = 0; index < selfSize; index++) {
-    PyObject *item = PyList_GetItem(self, index);
-    Py_INCREF(item); // `PyList_SetItem` steals the reference, so we must increase the reference count by 1
-    PyList_SetItem(result, index, item);
-  }
+  PyObject *result = PyList_GetSlice(self, 0, selfSize);
 
   unsigned numArgs = args.length();
   JS::RootedValue elementVal(cx);
