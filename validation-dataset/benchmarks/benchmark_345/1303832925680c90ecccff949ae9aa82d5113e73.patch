From 1303832925680c90ecccff949ae9aa82d5113e73 Mon Sep 17 00:00:00 2001
From: Tommy Reilly <treilly@adobe.com>
Date: Tue, 25 Nov 2008 15:17:18 -0500
Subject: [PATCH] Improved C++ profiler (r=tierney). Features:   no RTTI, or
 C++ exception dependencies   all allocations are named, name comes from
 allocating function   MEMTAG/MEMTYPE macros still supported Caveats   only
 works on windows in new MemoryProfiler build configuration that is a copy of
 release with symbols on and the omit frame pointer optimization turned off.  
 mac is hoped for but will require some help from apple   linux support should
 be easy but no ones asking for it

---
 nanojit/Fragmento.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/nanojit/Fragmento.cpp b/nanojit/Fragmento.cpp
index 24d3333..e7777c5 100644
--- a/nanojit/Fragmento.cpp
+++ b/nanojit/Fragmento.cpp
@@ -135,7 +135,7 @@ namespace nanojit
 	void Fragmento::pagesGrow(int32_t count)
 	{
 		NanoAssert(!_freePages.size());
-		MMGC_MEM_TYPE("NanojitFragmentoMem"); 
+		MMGC_MEM_TAG("NanojitFragmentoMem"); 
 		Page* memory = 0;
         GC *gc = _core->GetGC();
 		if (_stats.pages < _max_pages)
@@ -153,7 +153,7 @@ namespace nanojit
 			
 			// convert _max_pages to gc page count 
 			int32_t gcpages = (count*NJ_PAGE_SIZE) / _gcHeap->kNativePageSize;
-			MMGC_MEM_TYPE("NanoJitMem"); 
+			MMGC_MEM_TAG("NanoJitMem"); 
 			memory = (Page*)_gcHeap->Alloc(gcpages);
 #ifdef MEMORY_INFO
 			ChangeSizeExplicit("NanoJitMem", 1, _gcHeap->Size(memory));
