From d73f5e0bd5f6aede1436c59e81cb5632dd99de2d Mon Sep 17 00:00:00 2001
From: James Jones <james.jones.jmj@gmail.com>
Date: Thu, 17 Jan 2013 17:04:52 +0000
Subject: [PATCH] Improved support for MOV with integer immediate.

If the dest of MOV is a min-precision integer and the src is an
immediate then the immediate will be treated as having an integer bit
encoding.
---
 decode.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/decode.c b/decode.c
index df0732a..77cc096 100644
--- a/decode.c
+++ b/decode.c
@@ -675,6 +675,19 @@ const uint32_t* DeocdeInstruction(const uint32_t* pui32Token, Instruction* psIns
 
         //Instructions with two operands go here
         case OPCODE_MOV:
+        {
+            psInst->ui32NumOperands = 2;
+            ui32OperandOffset += DecodeOperand(pui32Token+ui32OperandOffset, &psInst->asOperands[0]);
+            ui32OperandOffset += DecodeOperand(pui32Token+ui32OperandOffset, &psInst->asOperands[1]);
+
+            //Mov with an integer dest. If src is an immediate then it must be encoded as an integer.
+            if(psInst->asOperands[0].eMinPrecision == OPERAND_MIN_PRECISION_SINT_16 ||
+                psInst->asOperands[0].eMinPrecision == OPERAND_MIN_PRECISION_UINT_16)
+            {
+                psInst->asOperands[1].iIntegerImmediate = 1;
+            }
+            break;
+        }
 		case OPCODE_LOG:
 		case OPCODE_RSQ:
 		case OPCODE_EXP:
