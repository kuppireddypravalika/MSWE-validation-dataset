From 89d3c876fec9e3dd9506722687c93077ee4c0f92 Mon Sep 17 00:00:00 2001
From: Andreas Schaefer <gentryx@gmx.de>
Date: Wed, 21 May 2014 11:39:02 +0200
Subject: [PATCH] exact type of soa_accessor can now be configured for
 FixedNeighborhood

---
 src/storage/fixedneighborhood.h | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/storage/fixedneighborhood.h b/src/storage/fixedneighborhood.h
index 11b982568..321a4c103 100644
--- a/src/storage/fixedneighborhood.h
+++ b/src/storage/fixedneighborhood.h
@@ -23,11 +23,18 @@ class NormalizeCoord
  * dimensions to be known at compile time. The benefit is that we can
  * significantly reduce runtime overhead.
  */
-template<typename CELL, typename TOPOLOGY, int DIM_X, int DIM_Y, int DIM_Z, int INDEX>
+template<
+    typename CELL,
+    typename TOPOLOGY,
+    int DIM_X,
+    int DIM_Y,
+    int DIM_Z,
+    int INDEX,
+    template<typename CELL2, int DIM_X2, int DIM_Y2, int DIM_Z2, int INDEX2> class SOA_ACCESSOR = LibFlatArray::soa_accessor>
 class FixedNeighborhood
 {
 public:
-    typedef LibFlatArray::soa_accessor<CELL, DIM_X, DIM_Y, DIM_Z, INDEX> SoAAccessor;
+    typedef SOA_ACCESSOR<CELL, DIM_X, DIM_Y, DIM_Z, INDEX> SoAAccessor;
 
     __host__ __device__
     FixedNeighborhood(SoAAccessor& accessor) :
@@ -36,7 +43,7 @@ class FixedNeighborhood
 
     template<int X, int Y, int Z>
     __host__ __device__
-    const LibFlatArray::soa_accessor<CELL, LIBFLATARRAY_PARAMS> operator[](FixedCoord<X, Y, Z>) const
+    const SOA_ACCESSOR<CELL, LIBFLATARRAY_PARAMS> operator[](FixedCoord<X, Y, Z>) const
     {
         return accessor[LibFlatArray::coord<X, Y, Z>()];
     }
