From 299f212d019e08a890cc5e045f0d94cf3189c2f0 Mon Sep 17 00:00:00 2001
From: Daniel Stevens <Dan.R.Stevens@gmail.com>
Date: Fri, 15 Oct 2021 09:45:56 -0600
Subject: [PATCH] Use std::clamp on populationToKill

This ensures at least 1 person is killed, if there is at least 1 unfed
person, and at most the population size is killed. This is true even for
mStarveRate values that may be out of the expected range.

Previously, very small mStarveRate values could mean 0 people would
starve, even if there were unfed people (so long as the total population
wasn't 1). Additionally, very large values, greater than 1.0, could
cause more starvations than there were people, which would lead to an
infinite loop below. I suppose we should allow such possible mStarveRate
values, as it's entirely possible panic could kick in, and cause a
resource war, which kills more people than starvation would have. (That
would also mean there would then be a surplus of food).
---
 OPHD/Population/Population.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/OPHD/Population/Population.cpp b/OPHD/Population/Population.cpp
index 458a7e96a..b153b8211 100644
--- a/OPHD/Population/Population.cpp
+++ b/OPHD/Population/Population.cpp
@@ -165,8 +165,8 @@ int Population::consumeFood(int food)
 	}
 
 	const int populationUnfed = mPopulation.size() - populationFed;
-	const int populationToKill = static_cast<int>(populationUnfed * mStarveRate);
-	if (mPopulation.size() == 1) { populationToKill = 1; }
+	const int minKill = std::clamp(populationUnfed, 0, 1);
+	const int populationToKill = std::clamp(static_cast<int>(populationUnfed * mStarveRate), minKill, mPopulation.size());
 	mDeathCount += populationToKill;
 
 	for (int i = populationToKill; i > 0; mStarveRoleIndex = (mStarveRoleIndex + 1) % 5)
