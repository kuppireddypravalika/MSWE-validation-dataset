From 9aafd124785a087bd5d64c77c388f0d7ac94fefa Mon Sep 17 00:00:00 2001
From: John Haddon <thehaddonyoof@gmail.com>
Date: Thu, 17 Aug 2017 17:08:15 +0100
Subject: [PATCH] AlembicScene : Set Ogawa stream count to 4

This gives a 4x speed increase at a reasonable price in open file handles.
---
 .../src/IECoreAlembic/AlembicScene.cpp              | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/contrib/IECoreAlembic/src/IECoreAlembic/AlembicScene.cpp b/contrib/IECoreAlembic/src/IECoreAlembic/AlembicScene.cpp
index a011fd5b26..442a7918e6 100644
--- a/contrib/IECoreAlembic/src/IECoreAlembic/AlembicScene.cpp
+++ b/contrib/IECoreAlembic/src/IECoreAlembic/AlembicScene.cpp
@@ -92,8 +92,19 @@ class AlembicScene::AlembicReader : public AlembicIO
 
 		AlembicReader( const std::string &fileName )
 		{
-			/// \todo Experiment with setting the number of Ogawa streams
 			IFactory factory;
+			// Increasing the number of streams gives better
+			// multithreaded performance, because Ogawa locks
+			// around the stream. But each stream consumes an
+			// additional file handle, so we choose a fairly
+			// conservative number of streams, rather than simply
+			// matching the core count.
+			//
+			// I believe that Alembic 1.7.2 removes the locking
+			// entirely at which point the number of streams is
+			// irrelevant - see https://github.com/alembic/alembic/issues/124
+			// for more details.
+			factory.setOgawaNumStreams( 4 );
 			m_archive = std::make_shared<IArchive>( factory.getArchive( fileName ) );
 			if( !m_archive->valid() )
 			{
