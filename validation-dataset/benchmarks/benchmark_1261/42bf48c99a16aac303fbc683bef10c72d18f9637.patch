From 42bf48c99a16aac303fbc683bef10c72d18f9637 Mon Sep 17 00:00:00 2001
From: Cory Quammen <cory.quammen@kitware.com>
Date: Wed, 24 Jun 2020 16:26:57 -0400
Subject: [PATCH] Projected tetrahedra: enable coloring by vector components
 and magnitude

Previously, only the first component of the data array was available
for coloring. Support both coloring by a single component or vector
magnitude.
---
 .../Volume/vtkProjectedTetrahedraMapper.cxx   | 20 ++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/Rendering/Volume/vtkProjectedTetrahedraMapper.cxx b/Rendering/Volume/vtkProjectedTetrahedraMapper.cxx
index cab030c0a45..5fdcaa72b18 100644
--- a/Rendering/Volume/vtkProjectedTetrahedraMapper.cxx
+++ b/Rendering/Volume/vtkProjectedTetrahedraMapper.cxx
@@ -321,9 +321,27 @@ void MapIndependentComponents(
     vtkColorTransferFunction* rgb = property->GetRGBTransferFunction();
     vtkPiecewiseFunction* alpha = property->GetScalarOpacity();
 
+    int vectorMode = rgb->GetVectorMode();
+    int vectorComponent = rgb->GetVectorComponent();
+
     for (i = 0; i < num_scalars; i++)
     {
-      ScalarType s = scalars->GetTypedComponent(i, 0);
+      ScalarType s = 0.0;
+      if (vectorMode == vtkScalarsToColors::COMPONENT)
+      {
+        s = scalars->GetTypedComponent(i, vectorComponent);
+      }
+      else
+      {
+        ScalarType sum = 0.0;
+        for (int comp = 0; comp < scalars->GetNumberOfComponents(); ++comp)
+        {
+          ScalarType t = scalars->GetTypedComponent(i, comp);
+          sum += t * t;
+        }
+        s = sqrt(sum);
+      }
+
       double trgb[3];
       rgb->GetColor(s, trgb);
       c[0] = static_cast<ColorType>(trgb[0]);
