From 123eb4cebef802d440217f04f6224b5f8c44dfb5 Mon Sep 17 00:00:00 2001
From: Matthew Fioravante <fmatthew5876@gmail.com>
Date: Mon, 9 Sep 2019 21:17:53 -0400
Subject: [PATCH] ReaderLcf: Optimize out calls to seekg() for small values

---
 src/reader_lcf.cpp | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/reader_lcf.cpp b/src/reader_lcf.cpp
index 7f3a816df..6a8195a52 100644
--- a/src/reader_lcf.cpp
+++ b/src/reader_lcf.cpp
@@ -198,14 +198,23 @@ bool LcfReader::Eof() const {
 }
 
 void LcfReader::Seek(size_t pos, SeekMode mode) {
+	constexpr auto fast_seek_size = 32;
 	switch (mode) {
 	case LcfReader::FromStart:
 		stream.seekg(pos, std::ios_base::beg);
 		offset = stream.tellg();
 		break;
 	case LcfReader::FromCurrent:
-		stream.seekg(pos, std::ios_base::cur);
-		offset = stream.tellg();
+		if (pos <= fast_seek_size) {
+			// seekg() always results in a system call which is slow.
+			// For small values just read and throwaway.
+			char buf[fast_seek_size];
+			stream.read(buf, pos);
+			offset += stream.gcount();
+		} else {
+			stream.seekg(pos, std::ios_base::cur);
+			offset = stream.tellg();
+		}
 		break;
 	case LcfReader::FromEnd:
 		stream.seekg(pos, std::ios_base::end);
