From d7cb07753e9b97a67595b9ea3ed6b4bba976a2a7 Mon Sep 17 00:00:00 2001
From: Chris Sweeney <cmsweeney@cs.ucsb.edu>
Date: Fri, 18 Dec 2015 23:59:20 -0800
Subject: [PATCH] Speed improvements for eigen with noalias() method

Change-Id: Id6db2610d95b6f7fccf0fcfad23aead828380642
---
 src/theia/math/l1_solver.h | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/src/theia/math/l1_solver.h b/src/theia/math/l1_solver.h
index 680d9c2ce..4ab2d06cd 100644
--- a/src/theia/math/l1_solver.h
+++ b/src/theia/math/l1_solver.h
@@ -139,16 +139,17 @@ class L1Solver {
         "  % 4d     % 4.4e     % 4.4e     % 4.4e     % 4.4e";
     for (int i = 0; i < options_.max_num_iterations; i++) {
       // Update x.
-      x = linear_solver_.solve(a_.transpose() * (rhs + z - u));
-      a_times_x = a_ * x;
-      ax_hat = options_.alpha * a_times_x + (1.0 - options_.alpha) * (z + rhs);
+      x.noalias() = linear_solver_.solve(a_.transpose() * (rhs + z - u));
+      a_times_x.noalias() = a_ * x;
+      ax_hat.noalias() = options_.alpha * a_times_x;
+      ax_hat.noalias() += (1.0 - options_.alpha) * (z + rhs);
 
       // Update z and set z_old.
       std::swap(z, z_old);
-      z = Shrinkage(ax_hat - rhs + u, 1.0 / options_.rho);
+      z.noalias() = Shrinkage(ax_hat - rhs + u, 1.0 / options_.rho);
 
       // Update u.
-      u += ax_hat - z - rhs;
+      u.noalias() += ax_hat - z - rhs;
 
       // Compute the convergence terms.
       const double r_norm = (a_times_x - z - rhs).norm();
