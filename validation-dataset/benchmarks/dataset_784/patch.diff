From f28e0f30f47838cf1382b439fd40cab639c4b873 Mon Sep 17 00:00:00 2001
From: Martin Suda <sudam@cs.man.ac.uk>
Date: Wed, 18 Jul 2018 08:52:29 +0100
Subject: [PATCH] better timing of TC_THEORY_INST_SIMP

---
 Inferences/TheoryInstAndSimp.cpp | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/Inferences/TheoryInstAndSimp.cpp b/Inferences/TheoryInstAndSimp.cpp
index b55eeb17c9..ec9de83e28 100644
--- a/Inferences/TheoryInstAndSimp.cpp
+++ b/Inferences/TheoryInstAndSimp.cpp
@@ -904,19 +904,23 @@ ClauseIterator TheoryInstAndSimp::generateClauses(Clause* premise,bool& premiseR
     selectedLiterals.loadFromIterator(Stack<Literal*>::Iterator(theoryLiterals));
   }
 
-  //auto it1 = getSolutions(theoryLiterals);
-  auto it1 = getSolutions(selectedLiterals);
+  {
+    TimeCounter t(TC_THEORY_INST_SIMP);
+
+    //auto it1 = getSolutions(theoryLiterals);
+    auto it1 = getSolutions(selectedLiterals);
 
-  auto it2 = getMappingIterator(it1,
+    auto it2 = getMappingIterator(it1,
                InstanceFn(premise,flattened,selectedLiterals,_splitter,_salg,this,premiseRedundant));
 
-  // filter out only non-zero results
-  auto it3 = getFilteredIterator(it2, NonzeroFn());
+    // filter out only non-zero results
+    auto it3 = getFilteredIterator(it2, NonzeroFn());
 
-  // measure time of the overall processing
-  auto it4 = getTimeCountedIterator(it3,TC_THEORY_INST_SIMP);
+    // measure time of the overall processing
+    auto it4 = getTimeCountedIterator(it3,TC_THEORY_INST_SIMP);
 
-  return pvi(it4);
+    return pvi(it4);
+  }
 }
 
 }
