From 75b7f035d70e389f8a656790b867c7fe5c401313 Mon Sep 17 00:00:00 2001
From: Tobias Doerffel <tobias.doerffel@gmail.com>
Date: Wed, 22 Feb 2017 18:52:00 +0100
Subject: [PATCH] Core: RfbLZORLE: use Swap24 for endianess conversion

We do not have an alpha channel and thus can save converting one byte.
---
 core/src/RfbLZORLE.cpp | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/core/src/RfbLZORLE.cpp b/core/src/RfbLZORLE.cpp
index a310797af..71edd83c9 100644
--- a/core/src/RfbLZORLE.cpp
+++ b/core/src/RfbLZORLE.cpp
@@ -68,6 +68,13 @@ static bool handleRaw( rfbClient *c, int rx, int ry, int rw, int rh )
 
 
 
+
+#define rfbClientSwap24(l) ((((l) & 0xff) << 16) | (((l) >> 16) & 0xff) | \
+				   (((l) & 0x00ff00)))
+#define rfbClientSwap24IfLE(l) (*(char *)&client->endianTest ? Swap24(l) : (l))
+
+
+
 static rfbBool handleEncodingLZORLE( rfbClient *client,
 										rfbFramebufferUpdateRectHeader *r )
 {
@@ -127,7 +134,7 @@ static rfbBool handleEncodingLZORLE( rfbClient *client,
 	const int sh = client->height;
 	for( uint32_t i = 0; i < hdr.bytesRLE && done == false; i+=4 )
 	{
-		const QRgb val = rfbClientSwap32IfLE( *( (QRgb*)( rle_data + i ) ) ) & 0xffffff;
+		const QRgb val = rfbClientSwap24IfLE( *( (QRgb*)( rle_data + i ) ) );
 		const uint8_t rleCount = rle_data[i+3];
 		for( uint16_t j = 0; j <= rleCount; ++j )
 		{
