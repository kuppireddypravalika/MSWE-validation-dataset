From 7f4295be96e0cd025981c59ad0961623e2fc47da Mon Sep 17 00:00:00 2001
From: David Korth <gerbilsoft@gerbilsoft.com>
Date: Sat, 28 Sep 2024 12:14:44 -0400
Subject: [PATCH] [libromdata] PEResourceReaderPrivate::loadResDir(): Raise the
 limit from 64 to 8192.

A random executable (actually, some malware program I saved from a
PC I cleaned years ago) has 5,377 entries in the resource directory.
I'm not sure why it has 5,377 entries, but let's make sure the whole
thing is readable instead of asserting at 64.

IMAGE_RESOURCE_DIRECTORY_ENTRY is 8 bytes, so this will use a maximum
of 64 KB for 8,192 entries.
---
 src/libromdata/disc/PEResourceReader.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/libromdata/disc/PEResourceReader.cpp b/src/libromdata/disc/PEResourceReader.cpp
index 6b8c9f28b7..0f9cfa298d 100644
--- a/src/libromdata/disc/PEResourceReader.cpp
+++ b/src/libromdata/disc/PEResourceReader.cpp
@@ -194,10 +194,10 @@ int PEResourceReaderPrivate::loadResDir(uint32_t addr, rsrc_dir_t &dir)
 
 	// Total number of entries.
 	unsigned int entryCount = le16_to_cpu(root.NumberOfNamedEntries) + le16_to_cpu(root.NumberOfIdEntries);
-	assert(entryCount <= 64);
-	if (entryCount > 64) {
+	assert(entryCount <= 8192);
+	if (entryCount > 8192) {
 		// Sanity check; constrain to 64 entries.
-		entryCount = 64;
+		entryCount = 8192;
 	}
 	uint32_t szToRead = static_cast<uint32_t>(entryCount * sizeof(IMAGE_RESOURCE_DIRECTORY_ENTRY));
 	unique_ptr<IMAGE_RESOURCE_DIRECTORY_ENTRY[]> irdEntries(new IMAGE_RESOURCE_DIRECTORY_ENTRY[entryCount]);
