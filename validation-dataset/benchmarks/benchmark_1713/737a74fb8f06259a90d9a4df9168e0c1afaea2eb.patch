From 737a74fb8f06259a90d9a4df9168e0c1afaea2eb Mon Sep 17 00:00:00 2001
From: Mike Beach <Mike.Beach@epicgames.com>
Date: Fri, 26 Feb 2016 17:24:54 -0500
Subject: [PATCH] A lighter take on the fix in 2858947. Now, only preventing
 the linker from calling Verify() in FinalizeCreation(), when
 LOAD_DeferDependencyLoads is set (for UserDefinedStructs loaded during
 Blueprint serialization) - we dropped the extra Verify() in
 GetPackageLinker(), as it was leading to stack overflows.

#jira UE-21098
#codereview Robert.Manuszewski

[CL 2884210 by Mike Beach in 4.11 branch]
---
 .../CoreUObject/Private/UObject/LinkerLoad.cpp    | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/Engine/Source/Runtime/CoreUObject/Private/UObject/LinkerLoad.cpp b/Engine/Source/Runtime/CoreUObject/Private/UObject/LinkerLoad.cpp
index 80608b778c2..2df3ea82f8c 100644
--- a/Engine/Source/Runtime/CoreUObject/Private/UObject/LinkerLoad.cpp
+++ b/Engine/Source/Runtime/CoreUObject/Private/UObject/LinkerLoad.cpp
@@ -1885,7 +1885,20 @@ FLinkerLoad::ELinkerStatus FLinkerLoad::FinalizeCreation()
 //			UE_LOG(LogLinker, Log, TEXT("Found a user created pacakge (%s)"), *(FPaths::GetBaseFilename(Filename)));
 		}
 
-		if( !(LoadFlags & LOAD_NoVerify))
+#if USE_CIRCULAR_DEPENDENCY_LOAD_DEFERRING
+		// we can't verify our imports if we're currently deferring dependency
+		// loads (or if we've explicitly requested this linker without it);
+		// with the LOAD_DeferDependencyLoads flag, this is most likely a 
+		// UserDefinedStruct package, which we need to load for some other Blueprint
+		// package (further up the stack), but at that Blueprint's request we 
+		// cannot spider out to load anything else - don't worry though, import
+		// verification happens as needed for CreateImport() during export 
+		// serialization, so it's not like this will be skipped completely (just
+		// deferred)
+		if (!(LoadFlags & (LOAD_NoVerify | LOAD_DeferDependencyLoads)))
+#else 
+		if (!(LoadFlags & LOAD_NoVerify))
+#endif // USE_CIRCULAR_DEPENDENCY_LOAD_DEFERRING
 		{
 			Verify();
 		}
