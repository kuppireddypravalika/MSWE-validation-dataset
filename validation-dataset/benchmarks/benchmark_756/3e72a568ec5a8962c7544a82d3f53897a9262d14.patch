From 3e72a568ec5a8962c7544a82d3f53897a9262d14 Mon Sep 17 00:00:00 2001
From: Marshall Clow <mclow.lists@gmail.com>
Date: Sat, 19 May 2018 03:09:05 +0000
Subject: [PATCH] Remove expression '1L + INT_MAX', because it overflows on
 machines where int/long are the same size

---
 .../std/containers/sequences/deque/deque.cons/deduct.pass.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/libcxx/test/std/containers/sequences/deque/deque.cons/deduct.pass.cpp b/libcxx/test/std/containers/sequences/deque/deque.cons/deduct.pass.cpp
index 7fc942549596..35a913e0ef1d 100644
--- a/libcxx/test/std/containers/sequences/deque/deque.cons/deduct.pass.cpp
+++ b/libcxx/test/std/containers/sequences/deque/deque.cons/deduct.pass.cpp
@@ -43,12 +43,12 @@ int main()
     }
 
     {
-    const long arr[] = {INT_MAX, 1L + INT_MAX, 2L, 3L };
+    const long arr[] = {INT_MAX, 1L, 2L, 3L };
     std::deque deq(std::begin(arr), std::end(arr), std::allocator<long>());
     static_assert(std::is_same_v<decltype(deq)::value_type, long>, "");
     assert(deq.size() == 4);
     assert(deq[0] == INT_MAX);
-    assert(deq[1] == 1L + INT_MAX);
+    assert(deq[1] == 1L);
     assert(deq[2] == 2L);
     }
     
