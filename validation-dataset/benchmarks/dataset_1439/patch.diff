From 7c4d3c1db0b5aefbfb6edf5591b0cd6741ca876a Mon Sep 17 00:00:00 2001
From: Markus Blatt <mblatt@dune-project.org>
Date: Fri, 1 Aug 2008 23:21:19 +0000
Subject: [PATCH] I was curious and added comparison to pool allocator, which
 seems faster.

[[Imported from SVN: r5258]]
---
 common/test/smallobject.cc | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/common/test/smallobject.cc b/common/test/smallobject.cc
index d6285c21a..9ef218948 100644
--- a/common/test/smallobject.cc
+++ b/common/test/smallobject.cc
@@ -6,6 +6,7 @@
 
 #include <dune/common/timer.hh>
 #include <dune/common/smallobject.hh>
+#include <dune/common/poolallocator.hh>
 
 using namespace Dune;
 
@@ -36,7 +37,7 @@ int main ( int argc, char **argv )
 {
   Timer timer;
 
-  const unsigned long iterations = 1 << 30;
+  const unsigned long iterations = 1 << 26;
   std :: cout << "Performing " << iterations << " iterations." << std :: endl;
 
   timer.reset();
@@ -56,6 +57,18 @@ int main ( int argc, char **argv )
   }
   double timeB = timer.elapsed();
   std :: cout << "Time with SmallObject: " << timeB << std :: endl;
-
   std :: cout << "Result: SmallObject is " << (timeA / timeB) << " times faster." << std :: endl;
+
+  timer.reset();
+  PoolAllocator<B,100> pool;
+  for( unsigned long i = 0; i < iterations; ++i )
+  {
+    B *b = pool.allocate(1);
+    pool.construct(b, B((int)i ));
+    pool.destroy(b);
+    pool.deallocate(b,1);
+  }
+  double timeB2 = timer.elapsed();
+  std :: cout << "Time with pool allocator: " << timeB2 << std :: endl;
+  std :: cout << "Result: pool allocator is " << (timeA / timeB2) << " times faster." << std :: endl;
 }
