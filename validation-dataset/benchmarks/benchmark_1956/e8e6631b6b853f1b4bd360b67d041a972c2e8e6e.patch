From e8e6631b6b853f1b4bd360b67d041a972c2e8e6e Mon Sep 17 00:00:00 2001
From: Patrick Williams <patrick@stwcx.xyz>
Date: Fri, 1 Dec 2023 16:57:29 -0600
Subject: [PATCH] async: context: use transfer instead of schedule

Later revisions of the stdexec proposal added a `transfer` method
that allows us to reduce 1 co_await.

Signed-off-by: Patrick Williams <patrick@stwcx.xyz>
Change-Id: If43877a85254b5572cc2a3a1cacdf6b580870b5a
---
 src/async/context.cpp | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/src/async/context.cpp b/src/async/context.cpp
index 8ddbe583..ad45c4d6 100644
--- a/src/async/context.cpp
+++ b/src/async/context.cpp
@@ -101,12 +101,10 @@ auto wait_process_completion::loop(context& ctx) -> task<>
 {
     while (!ctx.final_stop.stop_requested())
     {
-        // Handle the next sdbus event.
-        co_await wait_process_sender(ctx);
-
-        // Completion likely happened on the context 'caller' thread, so
-        // we need to switch to the worker thread.
-        co_await execution::schedule(ctx.loop.get_scheduler());
+        // Handle the next sdbus event.  Completion likely happened on a
+        // different thread so we need to transfer back to the worker thread.
+        co_await execution::transfer(wait_process_sender(ctx),
+                                     ctx.loop.get_scheduler());
     }
 
     {
