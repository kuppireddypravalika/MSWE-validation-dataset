From c84cca4066cb70450b0d5f18d6f317ecfeab8b81 Mon Sep 17 00:00:00 2001
From: Marco Colombo <m.colombo@ed.ac.uk>
Date: Sun, 29 Dec 2019 00:47:33 +0000
Subject: [PATCH] Use VectorBuilder to avoid unnecessary computations if n is a
 scalar

---
 stan/math/prim/scal/prob/poisson_lpmf.hpp | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/stan/math/prim/scal/prob/poisson_lpmf.hpp b/stan/math/prim/scal/prob/poisson_lpmf.hpp
index 279a8e0c2e3..6d24b4795fe 100644
--- a/stan/math/prim/scal/prob/poisson_lpmf.hpp
+++ b/stan/math/prim/scal/prob/poisson_lpmf.hpp
@@ -56,10 +56,18 @@ return_type_t<T_rate> poisson_lpmf(const T_n& n, const T_rate& lambda) {
 
   operands_and_partials<T_rate> ops_partials(lambda);
 
+  VectorBuilder<include_summand<propto>::value, T_partials_return, T_n>
+      lgamma_n_plus_one(length(n));
+  if (include_summand<propto>::value) {
+    for (size_t i = 0, len_n = length(n); i < len_n; i++) {
+      lgamma_n_plus_one[i] = lgamma(n_vec[i] + 1.0);
+    }
+  }
+
   for (size_t i = 0; i < size; i++) {
     if (!(lambda_vec[i] == 0 && n_vec[i] == 0)) {
       if (include_summand<propto>::value) {
-        logp -= lgamma(n_vec[i] + 1.0);
+        logp -= lgamma_n_plus_one[i];
       }
       logp += multiply_log(n_vec[i], value_of(lambda_vec[i]))
               - value_of(lambda_vec[i]);
