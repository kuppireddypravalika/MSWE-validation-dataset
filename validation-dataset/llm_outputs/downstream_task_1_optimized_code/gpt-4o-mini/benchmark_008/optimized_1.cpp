#include <vector>\n#include <algorithm>\n#include <stdexcept>\n#include <iterator>\n\nfloat compute_median(std::vector<float> data) {\n    if (data.empty()) throw std::invalid_argument("Data vector is empty");\n    std::size_t mid = data.size() / 2;\n    if (data.size() % 2 == 0) {\n        std::nth_element(data.begin(), data.begin() + mid, data.end());\n        float first = data[mid];\n        std::nth_element(data.begin(), data.begin() + mid - 1, data.end());\n        float second = data[mid - 1];\n        return (first + second) / 2.0f;\n    } else {\n        std::nth_element(data.begin(), data.begin() + mid, data.end());\n        return data[mid];\n    }\n}