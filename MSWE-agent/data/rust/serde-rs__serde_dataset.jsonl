{"org": "serde-rs", "repo": "serde", "number": 2798, "state": "closed", "title": "Allow to use `#[serde(getter = \"...\")]` on non-remote-wrapper types", "body": "Restrict getters only to `#[serde(remote = \"...\")]` types looks like artificial restriction with no rationale explaining. This PR eliminates it.\r\n\r\nCloses #2777", "base": {"label": "serde-rs:master", "ref": "master", "sha": "1b4da41f970555e111f471633205bbcb4dadbc63"}, "resolved_issues": [{"number": 2777, "title": "Serializing fields from a getter method.", "body": "Is there any way to serialize a struct field using a getter method? \r\n\r\n```rs\r\n#[derive(Serialize)]\r\nstruct MyStruct {\r\n    #[serde(serialize_getter(get_value_with_prefix))]\r\n    value: String,\r\n}\r\n\r\nimpl MyStruct {\r\n    fn get_value_with_prefix(&self) -> String {\r\n        format!(\"prefix-{}\", self.value)\r\n    }\r\n}\r\n```\r\nI have found this workaround to write a custom serializer\r\n```rs\r\nimpl Serialize for MyStruct {\r\n    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\r\n    where\r\n        S: Serializer,\r\n    {\r\n        let mut state = serializer.serialize_struct(\"MyStruct\", 1)?;\r\n        state.serialize_field(\"value\", &self.get_value_with_prefix())?;\r\n        state.end()\r\n    }\r\n}\r\n\r\n```\r\n\r\nBut the problem is that I lost the functionality of other field attributes such as:\r\n```rs\r\n#[serde(skip_serializing_if = \"Option::is_none\")]\r\n```\r\n\r\nIs there any other approach to achieve this but still can use the other field attributes?"}], "fix_patch": "diff --git a/serde_derive/src/internals/check.rs b/serde_derive/src/internals/check.rs\nindex 52b0f379f..fb57626b1 100644\n--- a/serde_derive/src/internals/check.rs\n+++ b/serde_derive/src/internals/check.rs\n@@ -76,22 +76,12 @@ fn check_remote_generic(cx: &Ctxt, cont: &Container) {\n // Getters are only allowed inside structs (not enums) with the `remote`\n // attribute.\n fn check_getter(cx: &Ctxt, cont: &Container) {\n-    match cont.data {\n-        Data::Enum(_) => {\n-            if cont.data.has_getter() {\n-                cx.error_spanned_by(\n-                    cont.original,\n-                    \"#[serde(getter = \\\"...\\\")] is not allowed in an enum\",\n-                );\n-            }\n-        }\n-        Data::Struct(_, _) => {\n-            if cont.data.has_getter() && cont.attrs.remote().is_none() {\n-                cx.error_spanned_by(\n-                    cont.original,\n-                    \"#[serde(getter = \\\"...\\\")] can only be used in structs that have #[serde(remote = \\\"...\\\")]\",\n-                );\n-            }\n+    if let Data::Enum(_) = cont.data {\n+        if cont.data.has_getter() {\n+            cx.error_spanned_by(\n+                cont.original,\n+                \"#[serde(getter = \\\"...\\\")] is not allowed in an enum\",\n+            );\n         }\n     }\n }\ndiff --git a/serde_derive/src/ser.rs b/serde_derive/src/ser.rs\nindex 35f8ca4bd..0e30a383e 100644\n--- a/serde_derive/src/ser.rs\n+++ b/serde_derive/src/ser.rs\n@@ -1259,29 +1259,20 @@ fn mut_if(is_mut: bool) -> Option<TokenStream> {\n \n fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {\n     let self_var = &params.self_var;\n-    match (params.is_remote, field.attrs.getter()) {\n-        (false, None) => {\n-            if params.is_packed {\n-                quote!(&{#self_var.#member})\n-            } else {\n-                quote!(&#self_var.#member)\n-            }\n-        }\n-        (true, None) => {\n-            let inner = if params.is_packed {\n-                quote!(&{#self_var.#member})\n-            } else {\n-                quote!(&#self_var.#member)\n-            };\n+    if let Some(getter) = field.attrs.getter() {\n+        let ty = field.ty;\n+        quote!(_serde::__private::ser::constrain::<#ty>(&#getter(#self_var)))\n+    } else {\n+        let inner = if params.is_packed {\n+            quote!(&{#self_var.#member})\n+        } else {\n+            quote!(&#self_var.#member)\n+        };\n+        if params.is_remote {\n             let ty = field.ty;\n             quote!(_serde::__private::ser::constrain::<#ty>(#inner))\n-        }\n-        (true, Some(getter)) => {\n-            let ty = field.ty;\n-            quote!(_serde::__private::ser::constrain::<#ty>(&#getter(#self_var)))\n-        }\n-        (false, Some(_)) => {\n-            unreachable!(\"getter is only allowed for remote impls\");\n+        } else {\n+            inner\n         }\n     }\n }\n", "test_patch": "diff --git a/test_suite/tests/test_gen.rs b/test_suite/tests/test_gen.rs\nindex ed9dc725e..256fe3823 100644\n--- a/test_suite/tests/test_gen.rs\n+++ b/test_suite/tests/test_gen.rs\n@@ -808,6 +808,41 @@ fn test_gen() {\n     #[derive(Deserialize)]\n     #[serde(bound(deserialize = \"[&'de str; N]: Copy\"))]\n     pub struct GenericUnitStruct<const N: usize>;\n+\n+    #[derive(Serialize)]\n+    pub struct WithGetter {\n+        #[serde(getter = \"Self::get\")]\n+        a: u8,\n+        #[serde(getter = \"free_function\")]\n+        b: u8,\n+    }\n+    impl WithGetter {\n+        fn get(&self) -> u8 {\n+            self.a\n+        }\n+    }\n+    pub fn free_function(obj: &WithGetter) -> u8 {\n+        obj.b\n+    }\n+    assert_ser::<WithGetter>();\n+\n+    // We need to constraint generic types with the same bounds as on `generic_free_function`\n+    #[derive(Serialize)]\n+    pub struct GenericWithGetter<T: Clone> {\n+        #[serde(getter = \"Self::get\")]\n+        a: T,\n+        #[serde(getter = \"generic_free_function\")]\n+        b: T,\n+    }\n+    impl<T: Clone> GenericWithGetter<T> {\n+        fn get(&self) -> T {\n+            self.a.clone()\n+        }\n+    }\n+    pub fn generic_free_function<T: Clone>(obj: &GenericWithGetter<T>) -> T {\n+        obj.b.clone()\n+    }\n+    assert_ser::<GenericWithGetter<u16>>();\n }\n \n //////////////////////////////////////////////////////////////////////////\ndiff --git a/test_suite/tests/ui/remote/nonremote_getter.rs b/test_suite/tests/ui/remote/nonremote_getter.rs\ndeleted file mode 100644\nindex 6c5f4681b..000000000\n--- a/test_suite/tests/ui/remote/nonremote_getter.rs\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-use serde_derive::Serialize;\n-\n-#[derive(Serialize)]\n-struct S {\n-    #[serde(getter = \"S::get\")]\n-    a: u8,\n-}\n-\n-impl S {\n-    fn get(&self) -> u8 {\n-        self.a\n-    }\n-}\n-\n-fn main() {}\ndiff --git a/test_suite/tests/ui/remote/nonremote_getter.stderr b/test_suite/tests/ui/remote/nonremote_getter.stderr\ndeleted file mode 100644\nindex e510fdc83..000000000\n--- a/test_suite/tests/ui/remote/nonremote_getter.stderr\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-error: #[serde(getter = \"...\")] can only be used in structs that have #[serde(remote = \"...\")]\n- --> tests/ui/remote/nonremote_getter.rs:4:1\n-  |\n-4 | / struct S {\n-5 | |     #[serde(getter = \"S::get\")]\n-6 | |     a: u8,\n-7 | | }\n-  | |_^\n", "fixed_tests": {"test_rc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ser::impls::test_format_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path_buf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_variant_containing_unit_struct_not_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_variant_containing_unit_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_from": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple_with_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_box": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytebuf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetime_propagation_for_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_refcell_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_char": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_osstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomics": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_saturating": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_any_after_flatten_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_tuple_and_struct_with_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_deny_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_mutably_borrowed_ref_cell": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_untagged_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_untagged_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "socket_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_desugared": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_with_flattened_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_with_skip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unsupported_type": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_complex_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bound": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_externally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skipped_field_is_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_borrow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::structs": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::field1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_ty_param": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_with_flattened_integer_key": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ip_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "regression::issue2565::flatten_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_non_string_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_invalid_length_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nan_no_decimal_point": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_braced_struct_with_zero_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "regression::issue2565::simple_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_skipped_conflict": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen_custom_serde": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetimes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_collect_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_from_into_traits": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_packed_struct_can_derive_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_field_identifier": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_paths": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_number_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_new_type_with_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_map_twice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_owned_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_fmt_arguments": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_state_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_externally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unit_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::variant1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rwlock_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_floats": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::untagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_named_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping_overflow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_to": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_out_of_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_alias_in_flatten_context": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_variants": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_in_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nan": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_inclusive": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_newtype_variant_containing_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq_without_len": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_identifier_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignore_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_self": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_no_std_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_deserialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_map_access_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_system_time": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer_from_float": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_mutex_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_borrowed_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_result": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}}, "p2p_tests": {}, "f2p_tests": {}, "s2p_tests": {}, "n2p_tests": {"test_rc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ser::impls::test_format_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path_buf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_variant_containing_unit_struct_not_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_variant_containing_unit_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_from": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple_with_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_box": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytebuf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetime_propagation_for_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_refcell_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_char": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_osstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomics": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_saturating": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_any_after_flatten_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_tuple_and_struct_with_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_deny_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_mutably_borrowed_ref_cell": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_untagged_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_untagged_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "socket_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_desugared": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_with_flattened_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_with_skip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unsupported_type": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_complex_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bound": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_externally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skipped_field_is_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_borrow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::structs": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::field1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_ty_param": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_with_flattened_integer_key": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ip_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "regression::issue2565::flatten_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_non_string_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_invalid_length_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nan_no_decimal_point": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_braced_struct_with_zero_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "regression::issue2565::simple_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_skipped_conflict": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen_custom_serde": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetimes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_collect_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_from_into_traits": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_packed_struct_can_derive_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_field_identifier": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_paths": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_number_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_new_type_with_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_map_twice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_owned_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_fmt_arguments": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_state_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_externally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unit_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::variant1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rwlock_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_floats": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::untagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_named_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping_overflow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_to": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_out_of_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_alias_in_flatten_context": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_variants": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_in_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nan": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_inclusive": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_newtype_variant_containing_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq_without_len": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_identifier_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignore_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_self": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_no_std_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_deserialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_map_access_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_system_time": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer_from_float": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_mutex_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_borrowed_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_result": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}}, "run_result": {"passed_count": 297, "failed_count": 0, "skipped_count": 1, "passed_tests": ["test_flatten_map_twice", "test_rc", "test_cstr_internal_null", "ser::impls::test_format_u8", "test_duplicate_field_enum", "variant_identifier::aliases", "test_slice", "test_struct_owned_keys", "test_path_buf", "test_boxed_path", "test_untagged_newtype_variant_containing_unit_struct_not_map", "test_untagged_newtype_struct", "test_fmt_arguments", "test_internally_tagged_struct_variant_containing_unit_variant", "test_enum_state_field", "test_default_struct", "test_range_from", "test_enum_simple_with_skipped", "internals::case::rename_fields", "test_expecting_message_externally_tagged_enum", "test_borrowed_str_from_str", "test_serialize_with_enum", "test_box", "test_bool", "test_hashset_from_unit_struct", "test_vec_from_unit", "test_atomic64", "test_skip_struct", "flatten::enum_::externally_tagged::tuple", "test_nonzero_usize", "test_expecting_message", "test_cstring_internal_null_end", "test_vec", "field_identifier::unknown", "test_u64", "field_identifier::newtype_fallthrough_generic", "test_flatten_option", "test_cow", "test_untagged_enum_containing_flatten", "test_number_from_string", "test_nonzero_u32", "test_systemtime_overflow", "test_borrowed_bytes_from_bytebuf", "field_identifier::unit_fallthrough", "test_short_tuple", "test_generic_enum_unit", "test_generic_struct", "test_duration_overflow_struct", "test_lifetime_propagation_for_flatten", "test_net_ipaddr_compact", "test_gen", "test_enum_in_untagged_enum", "test_enum_skipped_variant", "test_nonzero_u8", "test_refcell_dst", "test_tuple", "test_char", "flatten::enum_::externally_tagged::struct_from_seq", "test_unknown_variant", "test_usizes", "test_unknown_field_rename_enum", "test_f32", "test_enum_other_unit", "test_string_from_borrowed_str", "test_osstring", "test_systemtime_overflow_seq", "test_net_ipv6addr_readable", "test_duplicate_field_struct", "variant_identifier::variant1", "test_rwlock_dst", "field_identifier::aliases", "test_untagged_enum", "test_cstr", "test_deserialize_enum", "test_atomics", "test_unit_from_tuple_struct", "test_saturating", "test_flatten_any_after_flatten_struct", "test_rc_weak_some", "test_nonzero_i64", "test_nonzero_u128", "test_hashset_from_unit", "test_expecting_message_adjacently_tagged_enum", "test_btreeset_from_unit", "test_enum_in_internally_tagged_enum", "test_borrowed_str_from_string", "test_floats", "test_serialize_with_struct", "test_string_from_unit", "test_u8", "test_internally_tagged_enum_containing_flatten", "test_hashmap", "test_internally_tagged_bytes", "test_gen_custom_serde", "test_unknown_field_rename_struct", "test_deserialize_with_variant", "test_enum_tuple_and_struct_with_flatten", "test_skip_serializing_enum", "test_struct_skip_default", "test_de_named_map", "test_deserialize_with_struct", "test_string", "test_elt_not_serialize", "test_hashmap_from_unit", "test_nonzero_isize", "test_u16", "variant_identifier::unknown", "test_adjacently_tagged_enum_deny_unknown_fields", "test_internally_tagged_enum", "test_enum", "flatten::enum_::untagged::struct_", "test_generic_tuple_struct", "test_btreemap_from_unit", "test_cannot_serialize_mutably_borrowed_ref_cell", "test_ignored_any", "test_named_unit", "test_expecting_message_untagged_tagged_enum", "test_enum_unit_bytes", "test_wrapping", "test_btreemap_from_unit_struct", "test_wrapping_overflow", "test_vec_from_unit_struct", "test_internally_tagged_enum_with_untagged_variant", "socket_addr_roundtrip", "test_partially_untagged_enum_desugared", "test_default_tuple", "test_struct_default", "test_enum_other", "test_rename_struct", "test_de_enum_unit", "test_cstr_internal_null_end", "test_internally_tagged_struct_with_flattened_field", "test_adjacently_tagged_enum_containing_flatten", "test_struct_with_skip", "test_tuple_struct", "test_enum_unit", "test_de_named_tuple", "test_integer128", "test_de_enum_map", "test_bool_from_string", "test_range_to", "test_isizes", "test_enum_out_of_range", "test_alias_in_flatten_context", "test_i32", "test_default_struct_variant", "test_duration_overflow_seq", "test_deserialize_with_enum", "flatten::enum_::externally_tagged::newtype", "test_i128", "test_flatten_unsupported_type", "test_duration", "test_complex_flatten", "test_de_enum_seq", "test_flatten_unit", "test_bound", "test_flatten_ignored_any", "internals::case::rename_variants", "test_rename_enum", "test_enum_skipped", "test_zero_array_from_unit", "test_externally_tagged_enum_containing_flatten", "test_f64", "test_btreeset_from_unit_struct", "test_unknown_field_in_flatten", "test_nan", "test_range_inclusive", "test_ser_enum_seq", "test_newtype_struct", "test_generic_enum_newtype", "test_transparent_tuple_struct", "test_internally_tagged_unit_enum_with_unknown_fields", "test_net_ipv6addr_compact", "test_skipped_field_is_unknown", "test_missing_renamed_field_enum", "test_nonzero_i16", "test_internally_tagged_borrow", "test_skip_serializing_struct", "test_internally_tagged_newtype_variant_containing_unit_struct", "test_option", "test_serialize_with_variant", "flatten::enum_::internally_tagged::structs", "test_unit_from_empty_seq_without_len", "test_unknown_field", "field_identifier::field1", "test_partially_untagged_enum_generic", "test_generic_newtype_struct", "test_u32_to_enum", "field_identifier::newtype_fallthrough", "test_u32", "test_default_ty_param", "flatten::enum_::adjacently_tagged::newtype", "test_array", "test_enum_unit_usize", "test_unit_struct_from_seq", "test_untagged_enum_with_flattened_integer_key", "test_adjacently_tagged_enum_bytes", "test_rc_weak_none", "test_rename_all", "ip_addr_roundtrip", "test_isize", "test_struct", "test_rc_dst", "test_btreemap", "test_generic_enum_seq", "regression::issue2565::flatten_variant", "test_i16", "test_adjacently_tagged_enum", "test_nonzero_u16", "test_internally_tagged_struct", "test_range", "flatten::enum_::externally_tagged::struct_from_map", "test_expecting_message_identifier_enum", "test_u128", "test_unit_from_empty_seq", "test_hashset", "test_atomic", "test_systemtime_overflow_struct", "test_i64", "test_partially_untagged_enum", "test_ignore_unknown", "test_unit", "test_net_socketaddr_compact", "test_self", "test_usize", "test_str", "test_enum_simple", "test_btreeset", "test_ser_named_map", "test_partially_untagged_internally_tagged_enum", "test_enum_map", "test_non_string_keys", "test_struct_skip_all_deny_unknown", "test_no_std_default", "test_enum_skip_all", "test_invalid_length_enum", "test_elt_not_deserialize", "flatten::enum_::adjacently_tagged::struct_", "test_nan_no_decimal_point", "test_hashmap_from_unit_struct", "test_internally_tagged_braced_struct_with_zero_fields", "test_map_access_to_enum", "test_net_ipv4addr_readable", "test_generic_unit_struct", "test_short_array", "test_arc_weak_none", "test_arc_dst", "test_arc_weak_some", "test_missing_renamed_field_struct", "test_net_ipaddr_readable", "test_system_time", "regression::issue2565::simple_variant", "test_net_ipv4addr_compact", "test_default_tuple_variant", "test_untagged_bytes", "test_boxed_slice", "test_transparent_struct", "test_nonzero_i8", "test_internally_tagged_enum_with_skipped_conflict", "test_expecting_message_internally_tagged_enum", "test_borrowed_bytes_from_bytes", "test_cstring", "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields", "test_borrowed_bytes", "test_partially_untagged_adjacently_tagged_enum", "test_lifetimes", "test_integer_from_float", "test_zero_array_from_unit_struct", "test_collect_other", "test_skip_all_deny_unknown", "test_rename_all_fields", "test_nonzero_u64", "test_mutex_dst", "test_nonzero_i128", "test_ser_named_tuple", "test_borrowed_str", "test_struct_skip_all", "test_from_into_traits", "test_i8", "test_arc", "test_net_socketaddr_readable", "test_struct_borrowed_keys", "test_ser_enum_unit", "test_unit_struct", "test_skip_serializing_tuple_struct", "test_cstring_internal_null", "test_field_identifier", "test_packed_struct_can_derive_serialize", "test_generic_enum_map", "test_cannot_serialize_paths", "test_adjacently_tagged_newtype_struct", "test_ser_enum_map", "test_nonzero_i32", "test_internally_tagged_enum_new_type_with_unit", "test_result", "test_path", "test_enum_seq"], "failed_tests": [], "skipped_tests": ["ui"]}, "test_patch_result": {"passed_count": 0, "failed_count": 0, "skipped_count": 0, "passed_tests": [], "failed_tests": [], "skipped_tests": []}, "fix_patch_result": {"passed_count": 297, "failed_count": 0, "skipped_count": 1, "passed_tests": ["test_flatten_map_twice", "test_rc", "test_cstr_internal_null", "ser::impls::test_format_u8", "test_duplicate_field_enum", "variant_identifier::aliases", "test_slice", "test_struct_owned_keys", "test_path_buf", "test_boxed_path", "test_untagged_newtype_variant_containing_unit_struct_not_map", "test_untagged_newtype_struct", "test_fmt_arguments", "test_internally_tagged_struct_variant_containing_unit_variant", "test_enum_state_field", "test_default_struct", "test_enum_simple_with_skipped", "test_range_from", "internals::case::rename_fields", "test_expecting_message_externally_tagged_enum", "test_borrowed_str_from_str", "test_serialize_with_enum", "test_box", "test_bool", "test_enum_skipped_variant", "test_hashset_from_unit_struct", "test_atomic64", "test_skip_struct", "flatten::enum_::externally_tagged::tuple", "test_nonzero_usize", "test_expecting_message", "test_cstring_internal_null_end", "test_vec", "field_identifier::unknown", "test_u64", "field_identifier::newtype_fallthrough_generic", "test_flatten_option", "test_cow", "test_untagged_enum_containing_flatten", "test_number_from_string", "test_nonzero_u32", "test_systemtime_overflow", "test_borrowed_bytes_from_bytebuf", "field_identifier::unit_fallthrough", "test_short_tuple", "test_generic_enum_unit", "test_generic_struct", "test_duration_overflow_struct", "test_lifetime_propagation_for_flatten", "test_net_ipaddr_compact", "test_gen", "test_enum_in_untagged_enum", "test_refcell_dst", "test_nonzero_u8", "test_tuple", "test_char", "flatten::enum_::externally_tagged::struct_from_seq", "test_unknown_variant", "test_usizes", "test_unknown_field_rename_enum", "test_f32", "test_enum_other_unit", "test_string_from_borrowed_str", "test_osstring", "test_systemtime_overflow_seq", "test_net_ipv6addr_readable", "test_duplicate_field_struct", "variant_identifier::variant1", "test_rwlock_dst", "field_identifier::aliases", "test_untagged_enum", "test_cstr", "test_deserialize_enum", "test_atomics", "test_unit_from_tuple_struct", "test_saturating", "test_flatten_any_after_flatten_struct", "test_rc_weak_some", "test_nonzero_i64", "test_nonzero_u128", "test_hashset_from_unit", "test_expecting_message_adjacently_tagged_enum", "test_btreeset_from_unit", "test_enum_in_internally_tagged_enum", "test_borrowed_str_from_string", "test_floats", "test_serialize_with_struct", "test_string_from_unit", "test_hashmap", "test_internally_tagged_enum_containing_flatten", "test_u8", "test_internally_tagged_bytes", "test_gen_custom_serde", "test_unknown_field_rename_struct", "test_deserialize_with_variant", "test_enum_tuple_and_struct_with_flatten", "test_vec_from_unit", "test_skip_serializing_enum", "test_struct_skip_default", "test_de_named_map", "test_deserialize_with_struct", "test_string", "test_elt_not_serialize", "test_hashmap_from_unit", "test_nonzero_isize", "test_u16", "variant_identifier::unknown", "test_adjacently_tagged_enum_deny_unknown_fields", "test_internally_tagged_enum", "test_enum", "flatten::enum_::untagged::struct_", "test_generic_tuple_struct", "test_btreemap_from_unit", "test_cannot_serialize_mutably_borrowed_ref_cell", "test_ignored_any", "test_named_unit", "test_expecting_message_untagged_tagged_enum", "test_enum_unit_bytes", "test_wrapping", "test_btreemap_from_unit_struct", "test_wrapping_overflow", "test_vec_from_unit_struct", "test_internally_tagged_enum_with_untagged_variant", "socket_addr_roundtrip", "test_partially_untagged_enum_desugared", "test_default_tuple", "test_struct_default", "test_enum_other", "test_rename_struct", "test_de_enum_unit", "test_cstr_internal_null_end", "test_internally_tagged_struct_with_flattened_field", "test_adjacently_tagged_enum_containing_flatten", "test_struct_with_skip", "test_tuple_struct", "test_enum_unit", "test_de_named_tuple", "test_integer128", "test_de_enum_map", "test_bool_from_string", "test_range_to", "test_isizes", "test_enum_out_of_range", "test_alias_in_flatten_context", "test_i32", "test_default_struct_variant", "test_duration_overflow_seq", "test_deserialize_with_enum", "flatten::enum_::externally_tagged::newtype", "test_i128", "test_flatten_unsupported_type", "test_duration", "test_complex_flatten", "test_de_enum_seq", "test_flatten_unit", "test_bound", "test_flatten_ignored_any", "internals::case::rename_variants", "test_rename_enum", "test_ser_enum_unit", "test_enum_skipped", "test_zero_array_from_unit", "test_externally_tagged_enum_containing_flatten", "test_f64", "test_btreeset_from_unit_struct", "test_unknown_field_in_flatten", "test_nan", "test_range_inclusive", "test_ser_enum_seq", "test_newtype_struct", "test_generic_enum_newtype", "test_transparent_tuple_struct", "test_internally_tagged_unit_enum_with_unknown_fields", "test_net_ipv6addr_compact", "test_skipped_field_is_unknown", "test_missing_renamed_field_enum", "test_nonzero_i16", "test_internally_tagged_borrow", "test_skip_serializing_struct", "test_internally_tagged_newtype_variant_containing_unit_struct", "test_option", "flatten::enum_::internally_tagged::structs", "test_serialize_with_variant", "test_unit_from_empty_seq_without_len", "test_unknown_field", "field_identifier::field1", "test_partially_untagged_enum_generic", "test_generic_newtype_struct", "test_u32_to_enum", "field_identifier::newtype_fallthrough", "test_u32", "test_default_ty_param", "flatten::enum_::adjacently_tagged::newtype", "test_array", "test_enum_unit_usize", "test_unit_struct_from_seq", "test_untagged_enum_with_flattened_integer_key", "test_adjacently_tagged_enum_bytes", "test_rc_weak_none", "test_rename_all", "ip_addr_roundtrip", "test_isize", "test_struct", "test_btreemap", "test_rc_dst", "test_generic_enum_seq", "regression::issue2565::flatten_variant", "test_i16", "test_adjacently_tagged_enum", "test_nonzero_u16", "test_internally_tagged_struct", "test_range", "flatten::enum_::externally_tagged::struct_from_map", "test_expecting_message_identifier_enum", "test_u128", "test_unit_from_empty_seq", "test_hashset", "test_atomic", "test_systemtime_overflow_struct", "test_i64", "test_partially_untagged_enum", "test_ignore_unknown", "test_unit", "test_net_socketaddr_compact", "test_self", "test_usize", "test_str", "test_enum_simple", "test_btreeset", "test_ser_named_map", "test_partially_untagged_internally_tagged_enum", "test_enum_map", "test_non_string_keys", "test_struct_skip_all_deny_unknown", "test_no_std_default", "test_enum_skip_all", "flatten::enum_::adjacently_tagged::struct_", "test_elt_not_deserialize", "test_invalid_length_enum", "test_hashmap_from_unit_struct", "test_nan_no_decimal_point", "test_internally_tagged_braced_struct_with_zero_fields", "test_map_access_to_enum", "test_net_ipv4addr_readable", "test_generic_unit_struct", "test_short_array", "test_arc_weak_none", "test_arc_dst", "test_arc_weak_some", "test_missing_renamed_field_struct", "test_net_ipaddr_readable", "test_system_time", "regression::issue2565::simple_variant", "test_net_ipv4addr_compact", "test_default_tuple_variant", "test_untagged_bytes", "test_boxed_slice", "test_transparent_struct", "test_cstring", "test_internally_tagged_enum_with_skipped_conflict", "test_expecting_message_internally_tagged_enum", "test_borrowed_bytes_from_bytes", "test_nonzero_i8", "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields", "test_borrowed_bytes", "test_partially_untagged_adjacently_tagged_enum", "test_lifetimes", "test_integer_from_float", "test_skip_all_deny_unknown", "test_collect_other", "test_zero_array_from_unit_struct", "test_rename_all_fields", "test_nonzero_u64", "test_mutex_dst", "test_nonzero_i128", "test_ser_named_tuple", "test_borrowed_str", "test_struct_borrowed_keys", "test_from_into_traits", "test_i8", "test_arc", "test_net_socketaddr_readable", "test_struct_skip_all", "test_generic_enum_map", "test_unit_struct", "test_skip_serializing_tuple_struct", "test_cstring_internal_null", "test_field_identifier", "test_packed_struct_can_derive_serialize", "test_cannot_serialize_paths", "test_adjacently_tagged_newtype_struct", "test_ser_enum_map", "test_nonzero_i32", "test_internally_tagged_enum_new_type_with_unit", "test_result", "test_path", "test_enum_seq"], "failed_tests": [], "skipped_tests": ["ui"]}, "instance_id": "serde-rs__serde-2798"}
{"org": "serde-rs", "repo": "serde", "number": 2709, "state": "closed", "title": "Implement Ser+De for Saturating<T>", "body": "This implementation is heavily inspired by the existing trait implentation for `std::num::Wrapping<T>`.\r\n\r\nfix #2708", "base": {"label": "serde-rs:master", "ref": "master", "sha": "5b24f88e73caa9c607527b5b4696fc34263cd238"}, "resolved_issues": [{"number": 2708, "title": "Impl Serialize/Deserialize for std::num::Saturating<T>", "body": "It would be nice if we could get\r\n\r\n```\r\nuse std::num::Saturating;\r\n\r\nimpl Deserialize for Saturating<T: Deserialize> { ... }\r\nimpl Serialize for Saturating<T: Serialize> { ... }\r\n```\r\n\r\nso that it is possible to handle wrapped types, that already support those traits."}], "fix_patch": "diff --git a/serde/build.rs b/serde/build.rs\nindex fe5486a7a..0074df63f 100644\n--- a/serde/build.rs\n+++ b/serde/build.rs\n@@ -64,6 +64,12 @@ fn main() {\n     if minor < 64 {\n         println!(\"cargo:rustc-cfg=no_core_cstr\");\n     }\n+\n+    // Support for core::num::Saturating and std::num::Saturating stabilized in Rust 1.74\n+    // https://blog.rust-lang.org/2023/11/16/Rust-1.74.0.html#stabilized-apis\n+    if minor < 74 {\n+        println!(\"cargo:rustc-cfg=no_core_num_saturating\");\n+    }\n }\n \n fn rustc_minor_version() -> Option<u32> {\ndiff --git a/serde/src/de/impls.rs b/serde/src/de/impls.rs\nindex d89f1872b..9ccb3ce69 100644\n--- a/serde/src/de/impls.rs\n+++ b/serde/src/de/impls.rs\n@@ -387,6 +387,73 @@ impl_deserialize_num! {\n     num_as_self!(u8:visit_u8 u16:visit_u16 u32:visit_u32 u64:visit_u64);\n }\n \n+#[cfg(not(no_core_num_saturating))]\n+macro_rules! visit_saturating {\n+    ($primitive:ident, $ty:ident : $visit:ident) => {\n+        #[inline]\n+        fn $visit<E>(self, v: $ty) -> Result<Saturating<$primitive>, E>\n+        where\n+            E: Error,\n+        {\n+            let out: $primitive = core::convert::TryFrom::<$ty>::try_from(v).unwrap_or_else(|_| {\n+                #[allow(unused_comparisons)]\n+                if v < 0 {\n+                    // never true for unsigned values\n+                    $primitive::MIN\n+                } else {\n+                    $primitive::MAX\n+                }\n+            });\n+            Ok(Saturating(out))\n+        }\n+    };\n+}\n+\n+macro_rules! impl_deserialize_saturating_num {\n+    ($primitive:ident, $deserialize:ident ) => {\n+        #[cfg(not(no_core_num_saturating))]\n+        impl<'de> Deserialize<'de> for Saturating<$primitive> {\n+            #[inline]\n+            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>\n+            where\n+                D: Deserializer<'de>,\n+            {\n+                struct SaturatingVisitor;\n+\n+                impl<'de> Visitor<'de> for SaturatingVisitor {\n+                    type Value = Saturating<$primitive>;\n+\n+                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+                        formatter.write_str(\"An integer with support for saturating semantics\")\n+                    }\n+\n+                    visit_saturating!($primitive, u8:visit_u8);\n+                    visit_saturating!($primitive, u16:visit_u16);\n+                    visit_saturating!($primitive, u32:visit_u32);\n+                    visit_saturating!($primitive, u64:visit_u64);\n+                    visit_saturating!($primitive, i8:visit_i8);\n+                    visit_saturating!($primitive, i16:visit_i16);\n+                    visit_saturating!($primitive, i32:visit_i32);\n+                    visit_saturating!($primitive, i64:visit_i64);\n+                }\n+\n+                deserializer.$deserialize(SaturatingVisitor)\n+            }\n+        }\n+    };\n+}\n+\n+impl_deserialize_saturating_num!(u8, deserialize_u8);\n+impl_deserialize_saturating_num!(u16, deserialize_u16);\n+impl_deserialize_saturating_num!(u32, deserialize_u32);\n+impl_deserialize_saturating_num!(u64, deserialize_u64);\n+impl_deserialize_saturating_num!(usize, deserialize_u64);\n+impl_deserialize_saturating_num!(i8, deserialize_i8);\n+impl_deserialize_saturating_num!(i16, deserialize_i16);\n+impl_deserialize_saturating_num!(i32, deserialize_i32);\n+impl_deserialize_saturating_num!(i64, deserialize_i64);\n+impl_deserialize_saturating_num!(isize, deserialize_i64);\n+\n macro_rules! num_128 {\n     ($ty:ident : $visit:ident) => {\n         fn $visit<E>(self, v: $ty) -> Result<Self::Value, E>\ndiff --git a/serde/src/lib.rs b/serde/src/lib.rs\nindex 5cf44c1c1..dc6d392bd 100644\n--- a/serde/src/lib.rs\n+++ b/serde/src/lib.rs\n@@ -274,6 +274,9 @@ mod lib {\n     pub use std::sync::atomic::{AtomicI64, AtomicU64};\n     #[cfg(all(feature = \"std\", not(no_target_has_atomic), target_has_atomic = \"ptr\"))]\n     pub use std::sync::atomic::{AtomicIsize, AtomicUsize};\n+\n+    #[cfg(not(no_core_num_saturating))]\n+    pub use self::core::num::Saturating;\n }\n \n // None of this crate's error handling needs the `From::from` error conversion\ndiff --git a/serde/src/ser/impls.rs b/serde/src/ser/impls.rs\nindex 7aa11621c..ffc4c70f9 100644\n--- a/serde/src/ser/impls.rs\n+++ b/serde/src/ser/impls.rs\n@@ -1026,6 +1026,20 @@ where\n     }\n }\n \n+#[cfg(not(no_core_num_saturating))]\n+impl<T> Serialize for Saturating<T>\n+where\n+    T: Serialize,\n+{\n+    #[inline]\n+    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n+    where\n+        S: Serializer,\n+    {\n+        self.0.serialize(serializer)\n+    }\n+}\n+\n impl<T> Serialize for Reverse<T>\n where\n     T: Serialize,\n", "test_patch": "diff --git a/test_suite/tests/test_de.rs b/test_suite/tests/test_de.rs\nindex 3ca0fde36..8a7310cd2 100644\n--- a/test_suite/tests/test_de.rs\n+++ b/test_suite/tests/test_de.rs\n@@ -23,7 +23,7 @@ use std::iter;\n use std::net;\n use std::num::{\n     NonZeroI128, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI8, NonZeroIsize, NonZeroU128,\n-    NonZeroU16, NonZeroU32, NonZeroU64, NonZeroU8, NonZeroUsize, Wrapping,\n+    NonZeroU16, NonZeroU32, NonZeroU64, NonZeroU8, NonZeroUsize, Saturating, Wrapping,\n };\n use std::ops::Bound;\n use std::path::{Path, PathBuf};\n@@ -2065,6 +2065,43 @@ fn test_wrapping() {\n     test(Wrapping(1usize), &[Token::U64(1)]);\n }\n \n+#[test]\n+fn test_saturating() {\n+    test(Saturating(1usize), &[Token::U32(1)]);\n+    test(Saturating(1usize), &[Token::U64(1)]);\n+    test(Saturating(0u8), &[Token::I8(0)]);\n+    test(Saturating(0u16), &[Token::I16(0)]);\n+\n+    // saturate input values at the minimum or maximum value\n+    test(Saturating(u8::MAX), &[Token::U16(u16::MAX)]);\n+    test(Saturating(u8::MAX), &[Token::U16(u8::MAX as u16 + 1)]);\n+    test(Saturating(u16::MAX), &[Token::U32(u32::MAX)]);\n+    test(Saturating(u32::MAX), &[Token::U64(u64::MAX)]);\n+    test(Saturating(u8::MIN), &[Token::I8(i8::MIN)]);\n+    test(Saturating(u16::MIN), &[Token::I16(i16::MIN)]);\n+    test(Saturating(u32::MIN), &[Token::I32(i32::MIN)]);\n+    test(Saturating(i8::MIN), &[Token::I16(i16::MIN)]);\n+    test(Saturating(i16::MIN), &[Token::I32(i32::MIN)]);\n+    test(Saturating(i32::MIN), &[Token::I64(i64::MIN)]);\n+\n+    test(Saturating(u8::MIN), &[Token::I8(-1)]);\n+    test(Saturating(u16::MIN), &[Token::I16(-1)]);\n+\n+    #[cfg(target_pointer_width = \"64\")]\n+    {\n+        test(Saturating(usize::MIN), &[Token::U64(u64::MIN)]);\n+        test(Saturating(usize::MAX), &[Token::U64(u64::MAX)]);\n+        test(Saturating(isize::MIN), &[Token::I64(i64::MIN)]);\n+        test(Saturating(isize::MAX), &[Token::I64(i64::MAX)]);\n+        test(Saturating(0usize), &[Token::I64(i64::MIN)]);\n+\n+        test(\n+            Saturating(9_223_372_036_854_775_807usize),\n+            &[Token::I64(i64::MAX)],\n+        );\n+    }\n+}\n+\n #[test]\n fn test_rc_dst() {\n     test(Rc::<str>::from(\"s\"), &[Token::Str(\"s\")]);\ndiff --git a/test_suite/tests/test_ser.rs b/test_suite/tests/test_ser.rs\nindex 71ec3bc57..b60d03ab2 100644\n--- a/test_suite/tests/test_ser.rs\n+++ b/test_suite/tests/test_ser.rs\n@@ -8,7 +8,7 @@ use std::cell::RefCell;\n use std::collections::{BTreeMap, BTreeSet, HashMap, HashSet};\n use std::ffi::CString;\n use std::net;\n-use std::num::Wrapping;\n+use std::num::{Saturating, Wrapping};\n use std::ops::Bound;\n use std::path::{Path, PathBuf};\n use std::rc::{Rc, Weak as RcWeak};\n@@ -624,6 +624,11 @@ fn test_wrapping() {\n     assert_ser_tokens(&Wrapping(1usize), &[Token::U64(1)]);\n }\n \n+#[test]\n+fn test_saturating() {\n+    assert_ser_tokens(&Saturating(1usize), &[Token::U64(1)]);\n+}\n+\n #[test]\n fn test_rc_dst() {\n     assert_ser_tokens(&Rc::<str>::from(\"s\"), &[Token::Str(\"s\")]);\n", "fixed_tests": {"test_rc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ser::impls::test_format_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path_buf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_variant_containing_unit_struct_not_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_variant_containing_unit_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple_with_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_from": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_box": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytebuf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetime_propagation_for_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_refcell_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_char": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_osstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomics": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_saturating": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "test_flatten_any_after_flatten_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_deny_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_mutably_borrowed_ref_cell": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_untagged_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_untagged_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "socket_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_desugared": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_with_flattened_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_with_skip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unsupported_type": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_complex_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bound": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_externally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skipped_field_is_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_borrow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::structs": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::field1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_ty_param": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_with_flattened_integer_key": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ip_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_non_string_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_invalid_length_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_braced_struct_with_zero_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_skipped_conflict": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen_custom_serde": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetimes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_collect_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_from_into_traits": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_packed_struct_can_derive_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_field_identifier": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_paths": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_number_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_new_type_with_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_map_twice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_owned_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_fmt_arguments": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_state_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_externally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unit_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::variant1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rwlock_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_floats": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::untagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_named_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping_overflow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_to": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_out_of_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_alias_in_flatten_context": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_variants": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_in_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nan": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_inclusive": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_newtype_variant_containing_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq_without_len": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_identifier_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignore_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_self": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_no_std_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_deserialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_map_access_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_system_time": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer_from_float": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_mutex_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_borrowed_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_result": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}}, "p2p_tests": {}, "f2p_tests": {}, "s2p_tests": {}, "n2p_tests": {"test_rc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ser::impls::test_format_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path_buf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_variant_containing_unit_struct_not_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_variant_containing_unit_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple_with_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_from": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_box": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytebuf": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetime_propagation_for_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_refcell_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_char": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string_from_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_osstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomics": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_saturating": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "test_flatten_any_after_flatten_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_deny_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_mutably_borrowed_ref_cell": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_untagged_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_untagged_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "socket_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_desugared": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct_with_flattened_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null_end": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_with_skip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_struct_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unsupported_type": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_complex_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bound": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_externally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skipped_field_is_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_borrow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_option": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::structs": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::field1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_ty_param": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_with_flattened_integer_key": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "ip_addr_roundtrip": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreeset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_non_string_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_invalid_length_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::adjacently_tagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashmap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_braced_struct_with_zero_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_none": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_weak_some": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv4addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_with_skipped_conflict": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen_custom_serde": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes_from_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_lifetimes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_all_deny_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_collect_other": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_from_into_traits": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_packed_struct_can_derive_serialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_field_identifier": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cannot_serialize_paths": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_number_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_new_type_with_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_flatten_map_twice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstr_internal_null": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duplicate_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_owned_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_path": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_fmt_arguments": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_state_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_vec_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_externally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_u64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::newtype_fallthrough_generic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::unit_fallthrough": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_gen": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_in_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_usizes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::variant1": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rwlock_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "field_identifier::aliases": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_u128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_floats": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_serialize_with_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_rename_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_deserialize_with_variant": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_skip_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_de_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "variant_identifier::unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::untagged::struct_": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignored_any": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_named_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_btreemap_from_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_wrapping_overflow": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skipped": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_default_tuple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum_containing_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_bool_from_string": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_to": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_out_of_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_alias_in_flatten_context": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::newtype": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_duration": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "internals::case::rename_variants": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_zero_array_from_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_f64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field_in_flatten": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nan": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range_inclusive": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_transparent_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_ipv6addr_compact": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_missing_renamed_field_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_newtype_variant_containing_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq_without_len": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unknown_field": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct_from_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_unit_usize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_isize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_generic_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i16": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_internally_tagged_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_range": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "flatten::enum_::externally_tagged::struct_from_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_expecting_message_identifier_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_from_empty_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_atomic": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_hashset": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_systemtime_overflow_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i64": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_partially_untagged_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ignore_unknown": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_self": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_simple": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_named_map": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_no_std_default": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_skip_all": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_elt_not_deserialize": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_map_access_to_enum": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_short_array": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_arc_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_system_time": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_untagged_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_boxed_slice": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_cstring": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_ser_enum_unit": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_integer_from_float": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_bytes": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_rename_all_fields": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_mutex_dst": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i128": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_borrowed_str": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_struct_borrowed_keys": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_i8": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_net_socketaddr_readable": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_unit_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_skip_serializing_tuple_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_adjacently_tagged_newtype_struct": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_nonzero_i32": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_result": {"run": "PASS", "test": "NONE", "fix": "PASS"}, "test_enum_seq": {"run": "PASS", "test": "NONE", "fix": "PASS"}}, "run_result": {"passed_count": 291, "failed_count": 0, "skipped_count": 1, "passed_tests": ["test_flatten_map_twice", "test_rc", "test_cstr_internal_null", "ser::impls::test_format_u8", "test_duplicate_field_enum", "variant_identifier::aliases", "test_slice", "test_struct_owned_keys", "test_path_buf", "test_boxed_path", "test_untagged_newtype_variant_containing_unit_struct_not_map", "test_untagged_newtype_struct", "test_fmt_arguments", "test_internally_tagged_struct_variant_containing_unit_variant", "test_enum_state_field", "test_default_struct", "test_enum_simple_with_skipped", "test_range_from", "internals::case::rename_fields", "test_expecting_message_externally_tagged_enum", "test_borrowed_str_from_str", "test_serialize_with_enum", "test_box", "test_bool", "test_enum_skipped_variant", "test_vec_from_unit", "test_hashset_from_unit_struct", "test_atomic64", "test_skip_struct", "flatten::enum_::externally_tagged::tuple", "test_nonzero_usize", "test_expecting_message", "test_cstring_internal_null_end", "test_vec", "field_identifier::unknown", "test_u64", "field_identifier::newtype_fallthrough_generic", "test_flatten_option", "test_cow", "test_untagged_enum_containing_flatten", "test_number_from_string", "test_nonzero_u32", "field_identifier::unit_fallthrough", "test_borrowed_bytes_from_bytebuf", "test_short_tuple", "test_generic_enum_unit", "test_generic_struct", "test_duration_overflow_struct", "test_lifetime_propagation_for_flatten", "test_net_ipaddr_compact", "test_gen", "test_enum_in_untagged_enum", "test_refcell_dst", "test_nonzero_u8", "test_tuple", "test_char", "flatten::enum_::externally_tagged::struct_from_seq", "test_unknown_variant", "test_usizes", "test_unknown_field_rename_enum", "test_f32", "test_enum_other_unit", "test_string_from_borrowed_str", "test_osstring", "test_systemtime_overflow_seq", "test_net_ipv6addr_readable", "test_duplicate_field_struct", "variant_identifier::variant1", "test_rwlock_dst", "field_identifier::aliases", "test_untagged_enum", "test_cstr", "test_deserialize_enum", "test_atomics", "test_unit_from_tuple_struct", "test_flatten_any_after_flatten_struct", "test_rc_weak_some", "test_nonzero_i64", "test_nonzero_u128", "test_hashset_from_unit", "test_expecting_message_adjacently_tagged_enum", "test_btreeset_from_unit", "test_enum_in_internally_tagged_enum", "test_borrowed_str_from_string", "test_floats", "test_serialize_with_struct", "test_string_from_unit", "test_u8", "test_internally_tagged_enum_containing_flatten", "test_hashmap", "test_internally_tagged_bytes", "test_gen_custom_serde", "test_unknown_field_rename_struct", "test_deserialize_with_variant", "test_skip_serializing_enum", "test_struct_skip_default", "test_de_named_map", "test_deserialize_with_struct", "test_string", "test_elt_not_serialize", "test_hashmap_from_unit", "test_nonzero_isize", "test_u16", "variant_identifier::unknown", "test_adjacently_tagged_enum_deny_unknown_fields", "test_internally_tagged_enum", "test_enum", "flatten::enum_::untagged::struct_", "test_generic_tuple_struct", "test_btreemap_from_unit", "test_cannot_serialize_mutably_borrowed_ref_cell", "test_ignored_any", "test_named_unit", "test_expecting_message_untagged_tagged_enum", "test_enum_unit_bytes", "test_wrapping", "test_btreemap_from_unit_struct", "test_wrapping_overflow", "test_vec_from_unit_struct", "test_internally_tagged_enum_with_untagged_variant", "socket_addr_roundtrip", "test_partially_untagged_enum_desugared", "test_default_tuple", "test_struct_default", "test_enum_other", "test_rename_struct", "test_de_enum_unit", "test_cstr_internal_null_end", "test_internally_tagged_struct_with_flattened_field", "test_adjacently_tagged_enum_containing_flatten", "test_struct_with_skip", "test_tuple_struct", "test_enum_unit", "test_de_named_tuple", "test_integer128", "test_de_enum_map", "test_bool_from_string", "test_range_to", "test_isizes", "test_enum_out_of_range", "test_alias_in_flatten_context", "test_i32", "test_default_struct_variant", "test_duration_overflow_seq", "test_deserialize_with_enum", "flatten::enum_::externally_tagged::newtype", "test_i128", "test_flatten_unsupported_type", "test_duration", "test_complex_flatten", "test_de_enum_seq", "test_flatten_unit", "test_bound", "test_flatten_ignored_any", "internals::case::rename_variants", "test_rename_enum", "test_enum_skipped", "test_zero_array_from_unit", "test_externally_tagged_enum_containing_flatten", "test_f64", "test_btreeset_from_unit_struct", "test_unknown_field_in_flatten", "test_nan", "test_range_inclusive", "test_ser_enum_seq", "test_newtype_struct", "test_generic_enum_newtype", "test_transparent_tuple_struct", "test_internally_tagged_unit_enum_with_unknown_fields", "test_net_ipv6addr_compact", "test_skipped_field_is_unknown", "test_missing_renamed_field_enum", "test_nonzero_i16", "test_internally_tagged_borrow", "test_skip_serializing_struct", "test_internally_tagged_newtype_variant_containing_unit_struct", "test_option", "test_serialize_with_variant", "flatten::enum_::internally_tagged::structs", "test_unit_from_empty_seq_without_len", "test_unknown_field", "field_identifier::field1", "test_partially_untagged_enum_generic", "test_generic_newtype_struct", "test_u32_to_enum", "field_identifier::newtype_fallthrough", "test_u32", "test_default_ty_param", "flatten::enum_::adjacently_tagged::newtype", "test_array", "test_enum_unit_usize", "test_unit_struct_from_seq", "test_untagged_enum_with_flattened_integer_key", "test_adjacently_tagged_enum_bytes", "test_rc_weak_none", "test_rename_all", "ip_addr_roundtrip", "test_isize", "test_struct", "test_rc_dst", "test_btreemap", "test_generic_enum_seq", "test_i16", "test_adjacently_tagged_enum", "test_nonzero_u16", "test_internally_tagged_struct", "test_range", "flatten::enum_::externally_tagged::struct_from_map", "test_expecting_message_identifier_enum", "test_u128", "test_unit_from_empty_seq", "test_hashset", "test_atomic", "test_systemtime_overflow_struct", "test_i64", "test_partially_untagged_enum", "test_ignore_unknown", "test_unit", "test_net_socketaddr_compact", "test_self", "test_usize", "test_str", "test_enum_simple", "test_btreeset", "test_ser_named_map", "test_partially_untagged_internally_tagged_enum", "test_enum_map", "test_non_string_keys", "test_struct_skip_all_deny_unknown", "test_no_std_default", "test_enum_skip_all", "test_elt_not_deserialize", "test_invalid_length_enum", "flatten::enum_::adjacently_tagged::struct_", "test_hashmap_from_unit_struct", "test_map_access_to_enum", "test_internally_tagged_braced_struct_with_zero_fields", "test_net_ipv4addr_readable", "test_generic_unit_struct", "test_short_array", "test_arc_weak_none", "test_arc_dst", "test_arc_weak_some", "test_missing_renamed_field_struct", "test_net_ipaddr_readable", "test_system_time", "test_net_ipv4addr_compact", "test_default_tuple_variant", "test_untagged_bytes", "test_boxed_slice", "test_transparent_struct", "test_nonzero_i8", "test_internally_tagged_enum_with_skipped_conflict", "test_expecting_message_internally_tagged_enum", "test_borrowed_bytes_from_bytes", "test_cstring", "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields", "test_borrowed_bytes", "test_partially_untagged_adjacently_tagged_enum", "test_lifetimes", "test_zero_array_from_unit_struct", "test_skip_all_deny_unknown", "test_collect_other", "test_integer_from_float", "test_rename_all_fields", "test_nonzero_u64", "test_mutex_dst", "test_nonzero_i128", "test_ser_named_tuple", "test_borrowed_str", "test_struct_skip_all", "test_from_into_traits", "test_i8", "test_net_socketaddr_readable", "test_arc", "test_struct_borrowed_keys", "test_ser_enum_unit", "test_unit_struct", "test_skip_serializing_tuple_struct", "test_cstring_internal_null", "test_field_identifier", "test_packed_struct_can_derive_serialize", "test_generic_enum_map", "test_cannot_serialize_paths", "test_adjacently_tagged_newtype_struct", "test_ser_enum_map", "test_nonzero_i32", "test_internally_tagged_enum_new_type_with_unit", "test_result", "test_path", "test_enum_seq"], "failed_tests": [], "skipped_tests": ["ui"]}, "test_patch_result": {"passed_count": 0, "failed_count": 0, "skipped_count": 0, "passed_tests": [], "failed_tests": [], "skipped_tests": []}, "fix_patch_result": {"passed_count": 292, "failed_count": 0, "skipped_count": 1, "passed_tests": ["test_flatten_map_twice", "test_rc", "test_cstr_internal_null", "ser::impls::test_format_u8", "test_duplicate_field_enum", "variant_identifier::aliases", "test_slice", "test_struct_owned_keys", "test_path_buf", "test_boxed_path", "test_untagged_newtype_struct", "test_untagged_newtype_variant_containing_unit_struct_not_map", "test_fmt_arguments", "test_internally_tagged_struct_variant_containing_unit_variant", "test_enum_state_field", "test_default_struct", "test_enum_simple_with_skipped", "test_range_from", "internals::case::rename_fields", "test_expecting_message_externally_tagged_enum", "test_borrowed_str_from_str", "test_serialize_with_enum", "test_box", "test_bool", "test_enum_skipped_variant", "test_hashset_from_unit_struct", "test_atomic64", "test_skip_struct", "flatten::enum_::externally_tagged::tuple", "test_nonzero_usize", "test_expecting_message", "test_cstring_internal_null_end", "test_vec", "field_identifier::unknown", "test_u64", "field_identifier::newtype_fallthrough_generic", "test_flatten_option", "test_cow", "test_untagged_enum_containing_flatten", "test_number_from_string", "test_nonzero_u32", "field_identifier::unit_fallthrough", "test_borrowed_bytes_from_bytebuf", "test_short_tuple", "test_generic_enum_unit", "test_generic_struct", "test_duration_overflow_struct", "test_lifetime_propagation_for_flatten", "test_net_ipaddr_compact", "test_gen", "test_enum_in_untagged_enum", "test_refcell_dst", "test_nonzero_u8", "test_tuple", "test_char", "flatten::enum_::externally_tagged::struct_from_seq", "test_unknown_variant", "test_usizes", "test_unknown_field_rename_enum", "test_f32", "test_enum_other_unit", "test_string_from_borrowed_str", "test_osstring", "test_systemtime_overflow_seq", "test_net_ipv6addr_readable", "test_duplicate_field_struct", "variant_identifier::variant1", "test_rwlock_dst", "field_identifier::aliases", "test_untagged_enum", "test_cstr", "test_deserialize_enum", "test_atomics", "test_unit_from_tuple_struct", "test_saturating", "test_flatten_any_after_flatten_struct", "test_rc_weak_some", "test_nonzero_i64", "test_nonzero_u128", "test_hashset_from_unit", "test_expecting_message_adjacently_tagged_enum", "test_btreeset_from_unit", "test_enum_in_internally_tagged_enum", "test_borrowed_str_from_string", "test_floats", "test_serialize_with_struct", "test_string_from_unit", "test_hashmap", "test_internally_tagged_enum_containing_flatten", "test_u8", "test_internally_tagged_bytes", "test_gen_custom_serde", "test_unknown_field_rename_struct", "test_deserialize_with_variant", "test_vec_from_unit", "test_skip_serializing_enum", "test_struct_skip_default", "test_de_named_map", "test_deserialize_with_struct", "test_string", "test_elt_not_serialize", "test_hashmap_from_unit", "test_nonzero_isize", "test_u16", "variant_identifier::unknown", "test_adjacently_tagged_enum_deny_unknown_fields", "test_internally_tagged_enum", "test_enum", "flatten::enum_::untagged::struct_", "test_generic_tuple_struct", "test_btreemap_from_unit", "test_cannot_serialize_mutably_borrowed_ref_cell", "test_ignored_any", "test_named_unit", "test_expecting_message_untagged_tagged_enum", "test_enum_unit_bytes", "test_wrapping", "test_btreemap_from_unit_struct", "test_wrapping_overflow", "test_vec_from_unit_struct", "test_internally_tagged_enum_with_untagged_variant", "socket_addr_roundtrip", "test_partially_untagged_enum_desugared", "test_default_tuple", "test_struct_default", "test_enum_other", "test_rename_struct", "test_de_enum_unit", "test_cstr_internal_null_end", "test_internally_tagged_struct_with_flattened_field", "test_adjacently_tagged_enum_containing_flatten", "test_struct_with_skip", "test_tuple_struct", "test_enum_unit", "test_de_named_tuple", "test_integer128", "test_de_enum_map", "test_bool_from_string", "test_range_to", "test_isizes", "test_enum_out_of_range", "test_alias_in_flatten_context", "test_i32", "test_default_struct_variant", "test_duration_overflow_seq", "test_deserialize_with_enum", "flatten::enum_::externally_tagged::newtype", "test_i128", "test_flatten_unsupported_type", "test_duration", "test_complex_flatten", "test_de_enum_seq", "test_flatten_unit", "test_bound", "test_flatten_ignored_any", "internals::case::rename_variants", "test_rename_enum", "test_ser_enum_unit", "test_enum_skipped", "test_zero_array_from_unit", "test_externally_tagged_enum_containing_flatten", "test_f64", "test_btreeset_from_unit_struct", "test_unknown_field_in_flatten", "test_nan", "test_range_inclusive", "test_ser_enum_seq", "test_newtype_struct", "test_generic_enum_newtype", "test_transparent_tuple_struct", "test_internally_tagged_unit_enum_with_unknown_fields", "test_net_ipv6addr_compact", "test_skipped_field_is_unknown", "test_missing_renamed_field_enum", "test_nonzero_i16", "test_internally_tagged_borrow", "test_skip_serializing_struct", "test_internally_tagged_newtype_variant_containing_unit_struct", "test_option", "flatten::enum_::internally_tagged::structs", "test_serialize_with_variant", "test_unit_from_empty_seq_without_len", "test_unknown_field", "field_identifier::field1", "test_partially_untagged_enum_generic", "test_generic_newtype_struct", "test_u32_to_enum", "field_identifier::newtype_fallthrough", "test_u32", "test_default_ty_param", "flatten::enum_::adjacently_tagged::newtype", "test_array", "test_enum_unit_usize", "test_unit_struct_from_seq", "test_untagged_enum_with_flattened_integer_key", "test_adjacently_tagged_enum_bytes", "test_rc_weak_none", "test_rename_all", "ip_addr_roundtrip", "test_isize", "test_struct", "test_btreemap", "test_rc_dst", "test_generic_enum_seq", "test_i16", "test_adjacently_tagged_enum", "test_nonzero_u16", "test_internally_tagged_struct", "test_range", "flatten::enum_::externally_tagged::struct_from_map", "test_expecting_message_identifier_enum", "test_u128", "test_unit_from_empty_seq", "test_hashset", "test_atomic", "test_systemtime_overflow_struct", "test_i64", "test_partially_untagged_enum", "test_ignore_unknown", "test_unit", "test_net_socketaddr_compact", "test_self", "test_usize", "test_str", "test_enum_simple", "test_btreeset", "test_ser_named_map", "test_partially_untagged_internally_tagged_enum", "test_enum_map", "test_non_string_keys", "test_struct_skip_all_deny_unknown", "test_no_std_default", "test_enum_skip_all", "flatten::enum_::adjacently_tagged::struct_", "test_elt_not_deserialize", "test_invalid_length_enum", "test_hashmap_from_unit_struct", "test_map_access_to_enum", "test_internally_tagged_braced_struct_with_zero_fields", "test_net_ipv4addr_readable", "test_generic_unit_struct", "test_short_array", "test_arc_weak_none", "test_arc_dst", "test_arc_weak_some", "test_missing_renamed_field_struct", "test_net_ipaddr_readable", "test_system_time", "test_net_ipv4addr_compact", "test_default_tuple_variant", "test_untagged_bytes", "test_boxed_slice", "test_transparent_struct", "test_cstring", "test_internally_tagged_enum_with_skipped_conflict", "test_expecting_message_internally_tagged_enum", "test_borrowed_bytes_from_bytes", "test_nonzero_i8", "flatten::enum_::internally_tagged::unit_enum_with_unknown_fields", "test_borrowed_bytes", "test_partially_untagged_adjacently_tagged_enum", "test_lifetimes", "test_integer_from_float", "test_skip_all_deny_unknown", "test_collect_other", "test_zero_array_from_unit_struct", "test_rename_all_fields", "test_nonzero_u64", "test_mutex_dst", "test_nonzero_i128", "test_ser_named_tuple", "test_borrowed_str", "test_struct_skip_all", "test_from_into_traits", "test_i8", "test_arc", "test_net_socketaddr_readable", "test_struct_borrowed_keys", "test_generic_enum_map", "test_unit_struct", "test_skip_serializing_tuple_struct", "test_cstring_internal_null", "test_field_identifier", "test_packed_struct_can_derive_serialize", "test_cannot_serialize_paths", "test_adjacently_tagged_newtype_struct", "test_ser_enum_map", "test_nonzero_i32", "test_internally_tagged_enum_new_type_with_unit", "test_result", "test_path", "test_enum_seq"], "failed_tests": [], "skipped_tests": ["ui"]}, "instance_id": "serde-rs__serde-2709"}
